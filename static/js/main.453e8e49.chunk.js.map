{"version":3,"sources":["http-common.js","Services/ClienteService.js","Services/PessoasService.js","Services/LocaisService.js","Services/JuridicaServices.js","Services/FisicaService.js","Services/FuncionarioService.js","components/LocaisList.js","Services/VeiculoService.js","components/AddVeiculo.js","Services/OrdemService.js","Services/ServicoService.js","components/AddServico.js","components/ServicoList.js","components/AddOrdem.js","components/OrdemList.js","components/VeiculosList.js","components/AddJuridica.js","components/AddFisica.js","components/AddPessoa.js","components/AddCliente.js","components/ClienteList.js","drag-and-drop/Drag.js","drag-and-drop/Drop.js","components/CadastroDeOrdemCalendario.js","cartao/Cartao.js","ListComponent.js","helpers.js","components/Ordens.js","components/Charts.js","components/AddFuncionario.js","components/FuncionariosList.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","proxy","headers","Content-type","ClienteService","getAll","params","http","get","id","concat","data","post","update","put","remove","delete","removeAll","findByNome","nome","getLista","PessoasService","LocaisService","getAllEstados","getEstadoByNome","getCidadesByEstado","JuridicaServices","findByCnpj","cnpj","pessoa","findByPessoa","codPessoa","deleteByPessoa","FisicaService","findByCpf","cpf","FuncionarioService","LocaisList","props","useParams","_useState","useState","_useState2","Object","slicedToArray","show","setShow","navigate","useNavigate","_useState3","_useState4","estados","setEstados","_useState5","_useState6","currentEstado","setCurrentEstado","_useState7","_useState8","setCurrentIndex","_useState9","_useState10","_useState11","_useState12","dropDownEstado","setDropDownEstado","_useState13","_useState14","_useState15","_useState16","cidades","setCidades","_useState17","_useState18","currentCidade","setCurrentCidade","_useState19","_useState20","setCurrentCIndex","_useState21","_useState22","dropDownCidade","setDropDownCidade","_useState23","_useState24","setPessoa","useEffect","retrieveEstados","then","response","console","log","catch","e","_useState25","_useState26","docInvalido","setDocInvalido","setActiveEstado","estado","index","cod_estado","faznada","react_default","a","createElement","className","style","display","flexWrap","padding","margin","reactstrap_module","isOpen","toggle","caret","color","name","cidade","state_id","container","map","onClick","key","disabled","cindex","changeCidade","setActiveCidade","ToastContainer","position","Toast","onClose","delay","autohide","Header","src","alt","Body","marginTop","right","flex","operacao","cod_pessoa","endereco","telefone","personType","documento","responsef","code","responsej","responsedelj","responsedelf","changeVoSubmit","response2","cod_cliente","cod_funcionario","VeiculoService","findByMarca","marca","findByCliente","codCliente","placa","findByPlaca","AddVeiculo","dropDown","setDropDown","currentCliente","setCurrentCliente","retrieveClientes","veiculo","cliente","clientes","setClientes","desabilitar","criado","handleInputChange","target","value","type","onChange","required","modelo","ano","cor","Dropdown","Toggle","Menu","cli","Item","zIndex","setSubmitted","submitted","OrdemService","codFuncionario","dataA","page","size","findByFuncionario","findByCodFuncionario","findByAnoMes","mes","ServicoService","codOrdem","findByOrdem","getValores","AddServico","mudouvalor","event","maskedvalue","floatvalue","servico","Fragment","react_currency_input_es","valorPecas","onChangeEvent","decimalSeparator","thousandSeparator","prefix","valorServico","descricao","library","add","faPenToSquare","faTrashCan","faPlus","ServicoList","initialServicoState","setServico","codOrdemRef","useRef","current","servicoCriado","setServicoCriado","handleClose","handleShow","servicosList","setServicosList","servicosRef","setPage","count","setCount","pageSize","setPageSize","retrieveServicos","getRequestParams","_response$data","servicos","totalPages","status","deleteServico","setUpdated","getServico","columns","useMemo","accessor","Cell","rowIdx","row","align","rowIndex","openServico","OverlayTrigger","hide","placement","overlay","Tooltip","index_es","icon","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","paddingLeft","Pagination","siblingCount","boundaryCount","variant","shape","Button","assign","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","Modal","onHide","closeButton","Title","components_AddServico","_event$target","objectSpread","defineProperty","Footer","AddOrdem","funcionarios","setFuncionarios","currentFuncionario","setCurrentFuncionario","retrieveFuncionarios","criada","getCurrentFuncionario","ordem","gap","func","dataAbertura","aberto","valorTotalPecas","valorTotalServicos","Form","Check","label","checked","handleCheckChange","devolvido","components_ServicoList","OrdemList","veiculoRef","ordens","setOrdens","ordensRef","Date","initialOrdemState","moment","tz","format","atrasado","setOrdem","ordemCriada","setOrdemCriada","ajuste","setAjuste","retrieveOrdens","funcionario","ordensGet","ord","responseV","_responseV$data","valorTPecas","valorTServicos","openOrdem","e2","getOrdem","deleteOrdem","faScrewdriverWrench","fullscreen","components_AddOrdem","_event$target2","alert","VeiculosList","showOrdem","setShowOrdem","setVeiculo","initialVeiculoState","setVeiculoCriado","handleCloseOrdem","searchPlaca","setSearchPlaca","veiculosList","setVeiculosList","veiculosRef","retrieveVeiculos","propsCod","veiculos","deleteVeiculo","getVeiculo","openVeiculo","faClipboardList","veiculoCriado","placeholder","searchNome","components_AddVeiculo","centered","components_OrdemList","AddJuridica","esm","doc","changeHandler","mask","initialDoc","AddFisica","Addpessoa","lgShow","setLgShow","initialPessoaState","tipo","setTipo","initialDocumento","setInitialDocumento","setDocumento","getTipoAndDocumento","handleTipoChange","changeDocumento","inline","AddJuridica_AddJuridica","AddFisica_AddFisica","components_LocaisList","cd","changePaiSubmit","faCar","scrollable","components_VeiculosList","AddCliente","initialClienteState","setCliente","getCliente","timeId","setTimeout","clearTimeout","progressCounter","setProgressCounter","React","timer","clearInterval","paddingTop","width","AddPessoa","ProgressBar","animated","now","faPowerOff","faUserSlash","faEyeSlash","faEye","ClienteList","setSearchNome","clientesRef","refreshList","cAtivo","openCliente","codcli","deleteCliente","showInativos","setShowInativos","height","original","Drag","_ref","objectWithoutProperties","react_beautiful_dnd_esm","draggableId","provided","snapshot","ref","innerRef","isDragging","draggableProps","dragHandleProps","children","Drop","droppableId","isDraggingOver","droppableProps","CadastroDeOrdemCalendario","setCriada","ordemAberta","nfoundPlaca","setNfoundPlaca","veic","setVeic","veiculoSubmitted","setVeiculoSubmitted","showEdit","setShowEdit","handleCloseEdit","backgroundColor","border","hidden","window","location","reload","changeCrud","_event$target3","Cartao","collapse","setCollapse","item","colorBody","colorHead","ordemUpdated","setOrdemUpdated","inverse","textAlign","fontSize","faFilePen","marginBottom","index_esm","components_CadastroDeOrdemCalendario","left","bottom","ListComponent","mesAtual","dataAtual","anoAtual","diasMax","daysInMonth","currentOrdensList","setCurrentOrdensList","diaAtual","segundaAtual","dias","info","items","categories","setCategories","crud","setCrud","lista","currentCategories","categ","forEach","indexOf","push","updatableOrdem","setUpdatableOrdem","onDragEnd","result","source","destination","sourceCategoryId","destinationCategoryId","updatedOrder","list","startIndex","endIndex","Array","from","_result$splice","splice","removed","reorder","find","category","updatedCategories","sourceOrder","destinationOrder","_sourceOrder$splice","orde","categoryIndex","Drop_Drop","Drag_Drag","Cartao_Cartao","Ordens","setData","justifyContent","faCalendarPlus","dist_esm","onClickDay","defaultView","tileDisabled","view","date","getDay","ListComponent_ListComponent","Charts","dataPie","setDataPie","valorTotalMesPeca","valorTotalMesServico","valorTotalMesPecaAberta","valorTotalMesServicoAberta","abertas","qtdOrdens","setCurrentServList","COLORS","RADIAN","Math","PI","fvalorTotalMesPeca","fvalorTotalMesServico","fvalorTotalMesPecaAberta","fvalorTotalMesServicoAberta","fabertas","fqtdOrdens","setFcurrentOrdensList","some","retrieveOrdensFunc","es6","cx","cy","labelLine","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","dataKey","entry","length","scope","_ref2","marginLeft","AddFuncionario","setFuncionario","getFuncionario","FuncionariosList","funcionariosRef","deleteFuncionario","codfun","openFuncionario","App","--bs-navbar-padding-x","href","dist","to","rel","paddingRight","react_router_dist","path","element","components_Ordens","components_ClienteList","components_FuncionariosList","components_AddCliente","components_AddFuncionario","components_Charts","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.453e8e49.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://oficinamecanica-production.up.railway.app/api\",\r\n  proxy: \"https://oficinamecanica-production.up.railway.app/\",\r\n  //baseURL: \"http://localhost:8080/api\",\r\n  //proxy: \"http://localhost/\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nconst getAll = (params) => {\r\n  return http.get(\"/clientes\",{ params });\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/clientes/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/clientes\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/clientes/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/clientes/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/clientes`);\r\n};\r\n\r\nconst findByNome = nome => {\r\n  return http.get(`/clientes?nome=${nome}`);\r\n};\r\nconst getLista = () =>{\r\n  return http.get(`/clientes/lista`);\r\n}\r\nconst ClienteService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByNome,\r\n  getLista\r\n};\r\n\r\nexport default ClienteService;","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/pessoas\");\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/pessoas/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/pessoas\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/pessoas/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/pessoas/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/pessoas`);\r\n};\r\n\r\nconst PessoasService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll\r\n};\r\n\r\nexport default PessoasService;","import http from \"../http-common\";\r\n\r\nconst getAllEstados = () => {\r\n    return http.get(\"/estados\");\r\n  };\r\n\r\n  const getEstadoByNome = nome => {\r\n    return http.get(`/estados?nome=${nome}`);\r\n  };\r\n  const getCidadesByEstado = id => {\r\n    return http.get(`/estado/cidades/${id}`);\r\n  };\r\n\r\n  const LocaisService = {\r\n    getAllEstados,\r\n    getEstadoByNome,\r\n    getCidadesByEstado\r\n  };\r\n  \r\n  export default LocaisService;","import http from \"../http-common\";\r\n\r\nconst findByCnpj = cnpj => {\r\n  return http.get(`/juridicas/${cnpj}`);\r\n};\r\n\r\nconst create = (cnpj, pessoa) =>{\r\n    return http.post(`/juridicas?cnpj=${cnpj}`, pessoa);\r\n};\r\n\r\nconst findByPessoa = codPessoa =>{\r\n  return http.get(`/juridicas/pessoa/${codPessoa}`)\r\n};\r\nconst update = (codPessoa, cnpj) =>{\r\n  http.delete(`/fisicas/pessoa/${codPessoa}`)\r\n  return http.put(`/juridicas/pessoa/${codPessoa}?cnpj=${cnpj}`)\r\n\r\n};\r\n\r\nconst deleteByPessoa = codPessoa =>{\r\n  return http.delete(`/juridicas/pessoa/${codPessoa}`);\r\n}\r\nconst JuridicaServices = {\r\n  findByCnpj,\r\n  create,\r\n  findByPessoa,\r\n  update,\r\n  deleteByPessoa\r\n};\r\n\r\n\r\nexport default JuridicaServices;","import http from \"../http-common\";\r\n\r\nconst findByCpf = cpf => {\r\n  return http.get(`/fisicas/${cpf}`);\r\n};\r\n\r\nconst create = (cpf, pessoa) =>{\r\n    return http.post(`/fisicas?cpf=${cpf}`, pessoa);\r\n};\r\n\r\nconst findByPessoa = codPessoa =>{\r\n  return http.get(`/fisica/pessoa/${codPessoa}`)\r\n};\r\n\r\nconst update = (codPessoa, cpf) =>{\r\n   http.delete(`/juridicas/pessoa/${codPessoa}`)\r\n   return  http.put(`/fisica/pessoa/${codPessoa}?cpf=${cpf}`)\r\n  };\r\n \r\n  const deleteByPessoa = codPessoa =>{\r\n    return http.delete(`/fisicas/pessoa/${codPessoa}`);\r\n  }\r\n\r\nconst FisicaService = {\r\n  findByCpf,\r\n  create,\r\n  findByPessoa,\r\n  update,\r\n  deleteByPessoa\r\n};\r\n\r\n\r\nexport default FisicaService;","import http from \"../http-common\";\r\n\r\nconst getAll = (params) => {\r\n  return http.get(\"/funcionarios\",{ params });\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/funcionario/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/funcionario\", data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/funcionario/${id}`);\r\n};\r\n\r\nconst findByNome = nome => {\r\n  return http.get(`/funcionarios?nome=${nome}`);\r\n};\r\n\r\nconst getLista = () =>{\r\n  return http.get(`/funcionarios/lista`);\r\n}\r\n\r\nconst FuncionarioService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  remove,\r\n  findByNome,\r\n  getLista\r\n};\r\n\r\nexport default FuncionarioService;","import React, { useState, useEffect } from \"react\";\r\nimport LocaisService from \"../Services/LocaisService\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport {Dropdown,DropdownToggle,DropdownItem,DropdownMenu} from \"reactstrap\";\r\nimport PessoasService from \"../Services/PessoasService\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport JuridicaServices from \"../Services/JuridicaServices\";\r\nimport FisicaService from \"../Services/FisicaService\";\r\nimport FuncionarioService from \"../Services/FuncionarioService\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\n\r\nconst LocaisList = (props) => {\r\n  const {id} = useParams() //pega id do cliente/funcionario na path variable\r\n  const [show, setShow] = useState(false); //toast\r\n  const navigate = useNavigate() \r\n  const [estados, setEstados] = useState([]); //Lista de estados\r\n  const [currentEstado, setCurrentEstado] = useState(null); //Estado selecionado\r\n  const [currentIndex, setCurrentIndex] = useState(-1); //Indice selecionado\r\n  const [searchNome, setSearchNome] = useState(\"\"); //Nome do estado buscado\r\n  const [dropDownEstado, setDropDownEstado] = useState(false); //DropDown Ativo\r\n  const [mcliente, setMcliente] = useState();\r\n  const [cidades, setCidades] = useState([]);\r\n  const [currentCidade, setCurrentCidade] = useState(null);\r\n  const [currentCIndex, setCurrentCIndex] = useState(-1);\r\n  const [dropDownCidade, setDropDownCidade] = useState(false);\r\n\r\n  const [pessoa, setPessoa] = useState(null)\r\n\r\n  //Expande/abre dorpdown menu\r\n  const toggleEstado = () =>{\r\n    setDropDownEstado(!dropDownEstado)\r\n  }\r\n  const toggleCidade= () =>{\r\n    setDropDownCidade(!dropDownCidade)\r\n  }\r\n  useEffect(() => {\r\n    retrieveEstados();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPessoa(props.pessoa)\r\n  }, [props]);\r\n\r\n  //Busca todos os estados no banco\r\n  const retrieveEstados = () => {\r\n    LocaisService.getAllEstados()\r\n      .then(response => {\r\n        setEstados(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //Busca cidades pertencentes a um estado\r\n  const retrieveCidades = (cod_estado) => {\r\n    LocaisService.getCidadesByEstado(cod_estado)\r\n      .then(response => {\r\n        setCidades(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n const [docInvalido, setDocInvalido] = useState()\r\n  //SALVA COM POST E DEPOIS SETA A JSON COM A RESPOSTA VINDA DA API, QUE DEVE CONTER UM ID GERADO\r\n  const saveCliente= () => {\r\n    //pessoa a ser salva\r\n    var data = pessoa\r\n\r\n    //faz o Post\r\n    PessoasService.create(data) \r\n      .then(response => {\r\n        setPessoa({\r\n            cod_pessoa: response.data.cod_pessoa, //salva pessoa no banco e recebe o id gerado\r\n            nome: response.data.nome,\r\n            endereco: response.data.endereco,\r\n            telefone: response.data.telefone,\r\n            cidade:\tresponse.data.cidade\r\n        });\r\n        //depois de salvar pessoa\r\n        if(props.personType==\"juridica\")\r\n           JuridicaServices.create(props.documento, response.data) //salva juridica se houver cnpj\r\n              .then(responsej => { \r\n                   console.log(responsej);//imprime \r\n                 })\r\n                 .catch(e => {\r\n                    console.log(e);\r\n                    if(e.code=='ERR_BAD_RESPONSE')\r\n                      setShow(true)    \r\n                      setDocInvalido(\"cnpj\")\r\n                  });\r\n        if(props.personType==\"fisica\")\r\n           FisicaService.create(props.documento, response.data) //salva fisica\r\n              .then(responsef => { \r\n                   console.log(responsef);//imprime \r\n                 })\r\n                 .catch(e => {\r\n                    console.log(e);\r\n                    if(e.code=='ERR_BAD_RESPONSE')\r\n                      setShow(true)    \r\n                      setDocInvalido(\"cpf\")\r\n                  });          \r\n        //salva como cliente\r\n        if(props.operacao == 1)\r\n          ClienteService.create({pessoa: response.data}) //salva a pessoa gerada como cliente\r\n            .then(response2 => { //apos o servico acima, que retorna a resposta2\r\n                console.log(response2);//imprime cliente salvo\r\n                props.changeVoSubmit(); //muda estado do avo AddCliente para submitted\r\n                navigate(`/clientes/edit/${response2.data.cod_cliente}`)\r\n              })\r\n              .catch(e => {\r\n                console.log(e);\r\n              });\r\n         //funcionario\r\n         if(props.operacao == 0)\r\n          FuncionarioService.create({pessoa: response.data}) //salva a pessoa gerada como cliente\r\n            .then(response2 => { //apos o servico acima, que retorna a resposta2\r\n                console.log(response2);//imprime cliente salvo\r\n                props.changeVoSubmit(); //muda estado do avo AddCliente para submitted\r\n                navigate(`/funcionarios/edit/${response2.data.cod_funcionario}`)\r\n              })\r\n              .catch(e => {\r\n                console.log(e);\r\n              });     \r\n     }) \r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //faz o Update da pessoa vinculada ao cliente/funcionario\r\n  const udpateCliente = () =>{\r\n    var data = pessoa\r\n\r\n    PessoasService.update(data.cod_pessoa, data)\r\n    .then(response => {\r\n      setPessoa({\r\n        cod_pessoa: response.data.cod_pessoa, //salva pessoa no banco e recebe o id gerado\r\n        nome: response.data.nome,\r\n        endereco: response.data.endereco,\r\n        telefone: response.data.telefone,\r\n        cidade:\tresponse.data.cidade\r\n    });\r\n\r\n    if(props.personType==\"fisica\")\r\n    FisicaService.update(response.data.cod_pessoa,props.documento) //salva fisica\r\n       .then(responsef => { \r\n            console.log(responsef);//imprime \r\n          })\r\n          .catch(e => {\r\n             console.log(e); \r\n             if(e.code=='ERR_BAD_RESPONSE')\r\n                    setShow(true)    \r\n                    setDocInvalido(\"cpf\")\r\n           }); \r\n     if(props.personType==\"juridica\")\r\n    JuridicaServices.update(response.data.cod_pessoa, props.documento) //salva juridica\r\n       .then(responsej => { \r\n            console.log(responsej);//imprime \r\n          })\r\n          .catch(e => {\r\n             console.log(e);\r\n             if(e.code=='ERR_BAD_RESPONSE')\r\n                      setShow(true)    \r\n                      setDocInvalido(\"cnpj\")\r\n           });     \r\n           \r\n     if(props.personType==\"---\"){\r\n      JuridicaServices.deleteByPessoa(response.data.cod_pessoa) //salva juridica\r\n      .then(responsedelj => { \r\n           console.log(responsedelj);//imprime \r\n         })\r\n         .catch(e => {\r\n            console.log(e);\r\n          });\r\n          FisicaService.deleteByPessoa(response.data.cod_pessoa) //salva juridica\r\n      .then(responsedelf => { \r\n           console.log(responsedelf);//imprime \r\n         })\r\n         .catch(e => {\r\n            console.log(e);\r\n          });         \r\n     }\r\n    \r\n//depois de fazer o update\r\n      console.log(response);//imprime pessoa/cliente atualizada\r\n      props.changeVoSubmit();\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n  };\r\n\r\n  //Seta Estado ativo e seu indice na lista\r\n  const setActiveEstado = (estado, index) => {\r\n    setCurrentEstado(estado);\r\n    setCurrentIndex(index);\r\n    //carrega todas as cidades do estado selecionado\r\n    retrieveCidades(estado.id);\r\n    setCurrentCidade(null);\r\n    setCurrentCIndex(-1);\r\n  };\r\n\r\n  //cidade selecionada e inserida na pessoa vinda de AddPessoa\r\n  const setActiveCidade = (cidade, cindex) => {\r\n    setCurrentCidade(cidade);\r\n    setCurrentCIndex(cindex);\r\n    props.changeCidade(cidade);\r\n  };\r\n\r\n  //Busca um estado por nome no banco\r\n  const findByNome = () => {\r\n    LocaisService.getEstadoByNome(searchNome)\r\n      .then(response => {\r\n        setEstados(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const faznada = () => {}\r\n  const volta = () =>{\r\n    if(props.operacao ==1)\r\n      navigate('/clientes');\r\n    if(props.operacao == 0)\r\n      navigate('/funcionarios')  \r\n  }\r\n  return (\r\n  <div className=\"list row\">\r\n\r\n    {/**container estado */}\r\n    <div style={{display:\"flex\", flexWrap:\"wrap\", padding:\"5px\"}}>\r\n    <div style={{margin:\"5px\"}}>\r\n      <Dropdown isOpen={dropDownEstado} toggle={toggleEstado}>\r\n        <DropdownToggle caret color=\"primary\">\r\n         {currentEstado? currentEstado.name: (props.pessoa.cidade? props.pessoa.cidade.state_id.name: \"Selecione um Estado\")}\r\n        </DropdownToggle>\r\n         <DropdownMenu container=\"body\">\r\n            {estados &&\r\n            estados.map((estado, index) => (\r\n              <DropdownItem\r\n                onClick={estado!=currentEstado?() => setActiveEstado(estado, index): ()=>faznada}\r\n                key={index}\r\n              >\r\n                {estado.name}\r\n              </DropdownItem>\r\n            ))}\r\n         </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n\r\n    {/**container cidades */}\r\n    <div style={{margin:\"5px\"}}>\r\n      <Dropdown isOpen={dropDownCidade} toggle={toggleCidade} disabled={currentEstado? false: true} >\r\n        <DropdownToggle caret color=\"primary\">\r\n        {currentCidade? currentCidade.name: (props.pessoa.cidade? props.pessoa.cidade.name: \"Selecione uma Cidade\")}\r\n        </DropdownToggle>\r\n         <DropdownMenu container=\"body\">\r\n            {cidades &&\r\n            cidades.map((cidade, cindex) => (\r\n              <DropdownItem\r\n                onClick={ () => setActiveCidade(cidade, cindex)}\r\n                key={cindex}\r\n              >\r\n                {cidade.name}\r\n              </DropdownItem>\r\n            ))}\r\n         </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n    </div>\r\n    <br/>\r\n        \r\n        <ToastContainer position=\"top-end\" className=\"p-3\">\r\n        <Toast onClose={() => setShow(false)} show={show} delay={5000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">{docInvalido} inválido ou já cadastrado</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>Insira um {docInvalido} válido</Toast.Body>\r\n        </Toast></ToastContainer>\r\n        <div style={{position:\"absolute\",display:\"flex\", marginTop:\"7rem\", right:\"1px\"}}>\r\n              <div style={{flex:\"3%\"}}></div>\r\n          <div style={{flex:\"85%\"}}>          \r\n          <button onClick={volta} className=\"btn btn-danger\">\r\n              Voltar \r\n            </button>\r\n          </div>\r\n          <div style={{flex:\"8%\"}}>\r\n          <button onClick={props.pessoa.cod_pessoa?udpateCliente :saveCliente} className=\"btn btn-success\" >\r\n            {props.pessoa.cod_pessoa? \"Salvar\" : \"Salvar\"}\r\n          </button>\r\n            </div>\r\n        </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default LocaisList;","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/veiculos\");\r\n};\r\n\r\nconst create = (placa, codCliente) => {\r\n  return http.post(`/veiculos/${placa}?cod_cliente=${codCliente}`);\r\n};\r\n\r\nconst findByPlaca = placa => {\r\n    return http.get(`/veiculos/${placa}`);\r\n  };\r\n  const update = (placa, data) => {\r\n    return http.put(`/veiculos/${placa}` ,data);\r\n  };\r\n\r\n  const findByMarca = marca => {\r\n    return http.get(`/veiculos?marca=${marca}`);\r\n  };  \r\n  \r\n  const findByCliente = (codCliente, params) => {\r\n    return http.get(`/veiculos/cliente/${codCliente}`, {params});\r\n  };\r\n  const remove = placa => {\r\n    return http.delete(`/veiculos/${placa}`);\r\n  }; \r\n\r\nconst VeiculoService = {\r\n  getAll,\r\n  findByMarca,\r\n  findByCliente,\r\n  create,\r\n  findByPlaca,\r\n    remove,\r\n    update\r\n};\r\n\r\nexport default VeiculoService;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport VeiculoService from \"../Services/VeiculoService\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ClienteService from \"../Services/ClienteService\";\r\nconst AddVeiculo = (props) => {\r\n    const {id} = useParams() //id do cliente na path variable\r\n    const [dropDown, setDropDown] = useState(false)\r\n    const toggleDrop = () =>{\r\n      setDropDown(!dropDown)\r\n      //console.log(dropDown)\r\n    }\r\n    const [currentCliente, setCurrentCliente] = useState()\r\n    //carrega lista de clientes\r\n    useEffect(() => {\r\n      retrieveClientes(); //lista de clientes disponiveis\r\n      setCurrentCliente(props.veiculo.cliente)\r\n    }, []);\r\n\r\n//lista de clientes\r\nconst [clientes, setClientes] = useState([])\r\n\r\n\r\n\r\n\r\n//pega lista ed clientes\r\nconst retrieveClientes = () => {\r\n  ClienteService.getLista()\r\n    .then(response => {\r\n      setClientes(response.data);\r\n      console.log(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n};\r\n// faz nada\r\nconst faznada = () =>{}\r\n\r\nconst desabilitar = () =>{\r\n    if(!props.criado) //se o veiculo ainda nao foi criado, desabilita preencher os dados, permitindo so placa\r\n        return \"true\" //desabilita entradas que nao sao placa\r\n    else //se ja houver encontrado\r\n        return \"\" //permite editar\r\n}\r\n\r\nuseEffect(() => {\r\n  //chama a funcao handleInputchange do pai\r\n  props.handleInputChange({ //envia como argumento um evento com campo target.name e target.value\r\n   target:{\r\n     name:\"cliente\",\r\n     value: currentCliente \r\n   }\r\n })\r\n }, [currentCliente]); \r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <div>\r\n        {(props.criado)?  //se o veiculo ja foi criado, desabilita a funcao de escrever placa\r\n        <div className=\"form-group\">\r\n            <label>Placa do veículo</label>\r\n            <input disabled=\"disabled\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n              value={props.veiculo.placa}\r\n            />\r\n        </div>\r\n        : <div className=\"form-group\">\r\n        <label>Placa do veículo</label>\r\n        <input\r\n        type=\"text\"\r\n        id=\"placa\"\r\n        name=\"placa\"\r\n        onChange={props.handleInputChange}\r\n        className=\"form-control\"\r\n          value={props.veiculo.placa}\r\n        />\r\n        </div>}\r\n\r\n          <div className=\"form-group\">\r\n            <label>Marca</label>\r\n            <input\r\n              type=\"text\"\r\n              disabled={desabilitar()}\r\n              className=\"form-control\"\r\n              id=\"marca\"\r\n              required\r\n              value={props.veiculo.marca}\r\n              onChange={props.handleInputChange}\r\n              name=\"marca\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Modelo</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              disabled={desabilitar()}\r\n              id=\"modelo\"\r\n              value={props.veiculo.modelo}\r\n              onChange={props.handleInputChange}\r\n              name=\"modelo\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Ano</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              disabled={desabilitar()}\r\n              id=\"ano\"\r\n              value={props.veiculo.ano}\r\n              onChange={props.handleInputChange}\r\n              name=\"ano\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Cor</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              disabled={desabilitar()}\r\n              id=\"cor\"\r\n              value={props.veiculo.cor}\r\n              onChange={props.handleInputChange}\r\n              name=\"cor\"\r\n            />\r\n          </div>\r\n          <div>\r\n           <label>Selecionar novo dono do veiculo:</label>\r\n    <Dropdown isOpen={dropDown} toggle={toggleDrop}>\r\n        <Dropdown.Toggle caret>\r\n         {(props.veiculo.cliente)? props.veiculo.cliente.pessoa.nome: \"Selecione dono\"}\r\n        </Dropdown.Toggle>\r\n         <Dropdown.Menu container=\"body\">\r\n            {clientes &&\r\n            clientes.map((cli, index) => (\r\n              <Dropdown.Item\r\n                onClick={cli!=currentCliente?() => setCurrentCliente(cli): ()=>faznada}\r\n                key={index}\r\n                name=\"codCliente\"\r\n              >\r\n                {cli.pessoa.nome}\r\n              </Dropdown.Item>\r\n            ))}\r\n         </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n          <br/>\r\n        <br/>\r\n        </div>\r\n        <ToastContainer className=\"p-3\" position={'bottom-center'} style={{zIndex:1050}}>\r\n        {console.log()}\r\n      <Toast onClose={() => props.setSubmitted(false)} show={props.submitted} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Veículo salvo</strong>\r\n            <small>...</small>\r\n          </Toast.Header>\r\n          <Toast.Body>salvo com sucesso</Toast.Body>\r\n        </Toast>\r\n        </ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddVeiculo;","import http from \"../http-common\";\r\n\r\nconst get = id => {\r\n  return http.get(`/ordens/${id}`);\r\n};\r\n\r\nconst findByCodFuncionario = codFuncionario => {\r\n  return http.get(`/ordens/lista/f/${codFuncionario}`); \r\n};\r\n\r\nconst findByPlaca = (placa, params) => {\r\n    return http.get(`ordens/veiculo/${placa}?page=${params.page}&size=${params.size}`);\r\n  };\r\n \r\n  const findByAnoMes = (ano, mes) => {\r\n    return http.get(`/ordens/${ano}/${mes}`)\r\n  };\r\n\r\n  const findByFuncionario = (params) => { \r\n    return http.get(`/ordens/fucionario`, params);\r\n  };\r\n\r\nconst create = (codFuncionario, placa, dataA) => {\r\n  //console.log(\"placa \",placa)\r\n  return http.post(`/ordens/${codFuncionario}/${placa}?dataAbertura=${dataA}`);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/ordem/${id}`);\r\n};\r\n\r\nconst update = (id, data) =>{\r\n  return http.put(`/ordens/${id}`, data);\r\n};\r\n\r\n\r\nconst OrdemService = {\r\n  get,\r\n  create,\r\n  remove,\r\n  findByPlaca,\r\n  findByFuncionario,\r\n  findByCodFuncionario,\r\n  findByAnoMes,\r\n  update\r\n};\r\n\r\nexport default OrdemService;","import http from \"../http-common\";\r\n\r\nconst get = id => {\r\n  return http.get(`/servicos/${id}`);\r\n};\r\n\r\nconst findByOrdem = (codOrdem, params) => {\r\n    return http.get(`/servicos/ordem/${codOrdem}?page=${params.page}&size=${params.size}`);\r\n  };\r\n\r\n\r\nconst create = (codOrdem,data) => {\r\n  return http.post(`/servicos/${codOrdem}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/servico/${id}`);\r\n};\r\n\r\nconst update = (id,data) => {\r\n  return http.put(`/servicos/${id}`, data);\r\n};\r\n\r\n\r\nconst getValores = codOrdem =>{\r\n  return http.get(`/ordem/${codOrdem}/valores`);\r\n}\r\n\r\nconst ServicoService = {\r\n  get,\r\n  create,\r\n  remove,\r\n  findByOrdem,\r\n  update,\r\n  getValores\r\n};\r\n\r\nexport default ServicoService;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport VeiculoService from \"../Services/VeiculoService\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport CurrencyInput from 'react-currency-input';\r\n\r\nconst AddServico = (props) => {\r\n\r\nuseEffect(()=>{\r\n}, [props]) //atualiza pela props. quando o servico for criado, carrega o codigo do servico no render\r\n\r\nconst faznada = () =>{}\r\n\r\n//ao mudar o valor de um campo currency\r\nconst mudouvalor = (event, maskedvalue, floatvalue)=>{\r\n //console.log(maskedvalue, \"----\", floatvalue)\r\n //console.log(event.target.name)\r\nprops.handleInputChange({\r\n  target:{\r\n    name: event.target.name,\r\n    value:floatvalue\r\n  }\r\n })\r\n //console.log(props.servico)\r\n}\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <div>\r\n      <div>\r\n            <label>Código da ordem: {props.codOrdem}</label>{/*props.servico.codOrdem foi setado no servicoInitialState mas demora para carregar*/}\r\n          </div>\r\n          <br/>\r\n        {(props.criado)?  //se o veiculo ja foi criado, desabilita a funcao de escrever placa\r\n        <div className=\"form-group\">\r\n            <label>Código do serviço</label>\r\n            <input disabled=\"disabled\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n              value={props.servico.id}\r\n            />\r\n        </div>\r\n        : <></>\r\n        }\r\n        \r\n          <div className=\"form-group\">\r\n            <label>valorPecas</label>\r\n            <CurrencyInput \r\n            value={props.servico.valorPecas}\r\n            onChangeEvent={mudouvalor}\r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            className=\"form-control\"\r\n            name=\"valorPecas\"\r\n            />\r\n          </div>\r\n          \r\n            <div className=\"form-group\">\r\n            <label>valorServico</label>\r\n            <CurrencyInput \r\n            value={props.servico.valorServico} \r\n            onChangeEvent={mudouvalor}\r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            className=\"form-control\"\r\n            name=\"valorServico\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>descricao</label>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"descricao\"\r\n              value={props.servico.descricao}\r\n              onChange={props.handleInputChange}\r\n              name=\"descricao\"\r\n            />\r\n          </div>\r\n          <br/>\r\n        <br/>\r\n        </div>\r\n        <ToastContainer className=\"p-3\" position={'bottom-center'} style={{zIndex:1050}}>\r\n        {console.log()}\r\n      <Toast onClose={() => props.setSubmitted(false)} show={props.submitted} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Servico salvo</strong>\r\n            <small>...</small>\r\n          </Toast.Header>\r\n          <Toast.Body>salvo com sucesso</Toast.Body>\r\n        </Toast>\r\n        </ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddServico;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport { Link, Route,useNavigate, useParams } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useTable } from \"react-table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPenToSquare, faTrashCan, faPlus, faClipboardList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport ServicoService from \"../Services/ServicoService\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AddServico from './AddServico';\r\nimport OrdemList from './OrdemList';\r\nimport CurrencyInput from 'react-currency-input';\r\nlibrary.add(faPenToSquare, faTrashCan, faPlus);\r\n\r\nconst ServicoList = (props) => {\r\n\r\n    const initialServicoState =\r\n        {\r\n        id: null,\r\n        codOrdem: props.codOrdem,\r\n        valorPecas: 0,\r\n        valorServico: 0,\r\n        descricao: \"\"\r\n        }\r\n      \r\n  const [servico, setServico] = useState(initialServicoState);\r\n  const codOrdemRef = useRef() //as vezes o codigo recebido pelo props é descarregado de props... queremos que persista mesmo nos intervalos entre renders\r\n  codOrdemRef.current = props.codOrdem;\r\n  const [servicoCriado, setServicoCriado] = useState(false)\r\n  const [show, setShow] = useState(false);\r\n\r\n  ///quando fecha a componente AddServico, seta servico criado para falso, de modo que nao mostre codigo de servico em AddServico caso clique em cadastrar novo servico\r\n  //e tambem reseta a variavel servico, esvaziando\r\n  const handleClose = () => {setShow(false); setServico(initialServicoState);  setServicoCriado(false)\r\n  }\r\n  const handleShow = () => setShow(true);\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [servicosList, setServicosList] = useState([])\r\n  const servicosRef = useRef(); //persiste entre renders ao mudar paginacao, caixa de etxto ou qqr\r\n  servicosRef.current = servicosList; //lista inicial de clientes é mantida\r\n\r\n  const [page, setPage] = useState(1); //inicia na pagina 1\r\n  const [count, setCount] = useState(0); \r\n  const [pageSize, setPageSize] = useState(3); //3 itens por pag\r\n  const pageSizes = [3, 6, 9]; //itens por pagina opcoes\r\n  \r\n  const getRequestParams = (page, pageSize) => { //parametros para Api  \r\n    let params = {};\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params; \r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n      retrieveServicos()\r\n  }, [page, pageSize, props]); //quando muda a pagina ou pageSize, reexecuta retrieveClientes\r\n\r\n  \r\n///BUSCA LISTA DE SERVICOS\r\n  const retrieveServicos = () => {\r\n    const params = getRequestParams(page, pageSize); //pega parametros\r\n\r\n    ServicoService.findByOrdem(codOrdemRef.current, params)\r\n      .then(response => {\r\n        const { servicos, totalPages } = response.data\r\n        setServicosList(servicos);\r\n        setCount(totalPages);\r\n       if(response.status ==204)\r\n            setServicosList([]);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  //PAGINACAO\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handlePageSizeChange = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(1);\r\n  };\r\n\r\n\r\n//DELETA UM SERVICO\r\n  const deleteServico = (index) => {\r\n    const id = servicosRef.current[index].id;\r\n    ServicoService.remove(id)\r\n      .then(response => {\r\n        console.log(response);\r\n        retrieveServicos();\r\n        props.setUpdated(true)\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //ABRE MODAL DE EDICAO/CRIACAO DE SERVICO\r\n  const openServico = (rowIndex) => { \r\n    const id = servicosRef.current[rowIndex].id; \r\n    getServico(id) \r\n    setServicoCriado(true) \r\n    handleShow() \r\n  };\r\n\r\n  //Carrega o servico clicado pelo seu id\r\nconst getServico = (id) =>{\r\n  ServicoService.get(id)\r\n      .then(response => {\r\n        setServico({\r\n          id: response.data.id,\r\n          codOrdem: response.data.codOrdem,\r\n          valorPecas: response.data.valorPecas,\r\n          valorServico: response.data.valorServico,\r\n          descricao: response.data.descricao\r\n      });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n}\r\n  //DEFINICAO TABELA\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Codigo de Serviço\",\r\n        accessor: \"id\",\r\n      },\r\n      {\r\n        Header: \"Valor em peças\",\r\n        accessor: \"valorPecas\",\r\n      },\r\n      {\r\n        Header: \"Mão de obra\",\r\n        accessor: \"valorServico\",\r\n      },\r\n      {\r\n        Header: \"Descricao\",\r\n        accessor: \"descricao\",\r\n      },\r\n      {\r\n        Header: \" \",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id; //recebe o props de um elemento -> recebe o indice da linha\r\n          return (\r\n            <div className=\"row\" align=\"center\">\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => openServico(rowIdx)}> {/**rowIdx é o indice do cliente na lista clientes */}\r\n              <OverlayTrigger\r\n                      key={\"ed\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"ed\"}`}>\r\n                            <strong>{\"editar serviço\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-pen-to-square\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => deleteServico(rowIdx)}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"deletar serviço\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-trash-can\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div>  \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\nconst [submitted, setSubmitted] = useState(false)\r\n  //Varias funcoes que recebem dados da tabela\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ //tabela usada\r\n    columns, //colunas definidas acima\r\n    data: servicosList, //dados com accessor\r\n  });\r\n\r\n  //salva um servico no banco\r\n  const saveServico= () => {\r\n    //faz o Post\r\n    ServicoService.create(props.codOrdem,servico) \r\n      .then(response => {\r\n        setServico({\r\n            id: response.data.id,\r\n            codOrdem: response.data.codOrdem,\r\n            valorPecas: response.data.valorPecas,\r\n            valorServico: response.data.valorServico,\r\n            descricao: response.data.descricao\r\n        });\r\n            retrieveServicos();\r\n            setServicoCriado(true) //seta para true, que é detectado como mudança em props por AddServico\r\n            console.log(response)\r\n            setSubmitted(true)\r\n            props.setUpdated(true)\r\n    })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n ///atualiza um servico\r\n const updateServico = () =>{\r\n  //faz o Put\r\n  ServicoService.update(servico.id, servico) //ao clicar num servico, a funcao getServico preenche os dados do servico \r\n  .then(response => { //e a funcao handleInputChange deixa a component AddServico alterar dados do servico carregado\r\n    setServico({\r\n      id: response.data.id,\r\n      codOrdem: response.data.codOrdem,\r\n      valorPecas: response.data.valorPecas,\r\n      valorServico: response.data.valorServico,\r\n      descricao: response.data.descricao\r\n  });\r\n  retrieveServicos();//apos fazer update, atualiza lista de servicos\r\n  setServicoCriado(true) //mostra codigo do servico em AddServico\r\n  props.setUpdated(true)\r\nconsole.log(response)\r\n})\r\n  .catch(e => {\r\n    console.log(e);\r\n  });\r\n  setSubmitted(true) //mostra o toast no AddServico\r\n}\r\n\r\n//ATRIBUI VALORES À JSON \r\nconst handleInputChange = event => {\r\n  const { name, value } = event.target;\r\n  setServico({ ...servico, [name]: value });\r\n};\r\n\r\nconst faznada = ()=>{}\r\n\r\n  return (\r\n    <div className=\"list row\" style={{paddingLeft: \"0rem\"}}>\r\n      <h3 align=\"center\">Serviços</h3>\r\n      <div className=\"col-md-12 list\">\r\n        {/**Itens p/ pg */}\r\n      {\"Itens por página: \"} {/**handlePageSize atualiza pageSize que dispara nova busca na api pelo useEffect */}\r\n          <select onChange={handlePageSizeChange} value={pageSize}> \r\n            {pageSizes.map((size) => ( //opcao dos tamanhos que podem ser escolhidos\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/**Paginacao -> indice das paginas*/}\r\n          <Pagination\r\n            className=\"my-3\"\r\n            count={count} //contem a qtd total de paginas\r\n            page={page} //ao mudar este valor, o indice muda\r\n            siblingCount={1}\r\n            boundaryCount={1}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handlePageChange} //altera a pagina(indice) e dispara nova busca na api\r\n          />\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n        Cadastrar Servico\r\n      </Button>\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => ( //mapeia as colunas/headers extraidas\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}> {/**pega props do corpo gerado */}\r\n            {rows.map((row, i) => { //cada row recebe indice(a lista clientes tem indices)\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cadastro de Servicos</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <AddServico servico ={servico} handleInputChange = {handleInputChange} criado={servicoCriado} submitted={submitted} setSubmitted={setSubmitted}\r\n        codOrdem = {props.codOrdem}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={servicoCriado?updateServico: saveServico}>\r\n            Salvar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServicoList;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport VeiculoService from \"../Services/VeiculoService\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport FuncionarioService from \"../Services/FuncionarioService\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport ServicoList from \"./ServicoList\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport CurrencyInput from 'react-currency-input';\r\n\r\nconst AddOrdem = (props) => {\r\n    const {id} = useParams() //id do cliente na path variable\r\n const initialFunc = {codFuncionario: null}\r\n    const [funcionarios, setFuncionarios] = useState([])\r\n    const [currentFuncionario, setCurrentFuncionario] = useState(initialFunc)\r\n\r\n    const [dropDown, setDropDown] = useState(false)\r\n    useEffect(() => {\r\n      retrieveFuncionarios(); //lista de funcionarios disponiveis\r\n    }, []);\r\n \r\n    useEffect(() => {\r\n      console.log(props)\r\n      if(props.criada)\r\n          getCurrentFuncionario();\r\n    }, [props.ordem.codFuncionario]);\r\n\r\n    //quando sleecionar um funcionario\r\n    useEffect(() => {\r\n     //console.log(currentFuncionario.cod_funcionario) \r\n     //chama a funcao handleInputchange do pai(OrdemList)\r\n     props.handleInputChange({ //envia como argumento um evento com campo target.name e target.value\r\n      target:{\r\n        name:\"codFuncionario\",\r\n        value: currentFuncionario.cod_funcionario\r\n      }\r\n    })\r\n    }, [currentFuncionario]); //executa sempre ao mudar o funcionario\r\n\r\n    const getCurrentFuncionario = () =>{\r\n      FuncionarioService.get(props.ordem.codFuncionario)\r\n      .then(response => {\r\n        setCurrentFuncionario(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n    }\r\n    const retrieveFuncionarios = () => {\r\n      FuncionarioService.getLista()\r\n        .then(response => {\r\n          setFuncionarios(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    };\r\nconst [currentIndex, setCurrentIndex] = useState(-1)\r\n    const setActiveFuncionario = (funcionario, index) => {\r\n      setCurrentFuncionario(funcionario);\r\n      setCurrentIndex(index);\r\n    };\r\n\r\n\r\nconst faznada = () =>{}\r\n\r\nconst toggleDrop = () =>{\r\n  setDropDown(!dropDown)\r\n  //console.log(dropDown)\r\n}\r\n\r\nconst [teste, setTeste] =  useState(true)\r\n\r\n\r\n  return ( \r\n    <div className=\"submit-form\">\r\n      <div>\r\n      <h3 align=\"center\">{(props.criada)?\"Gerenciar ordem e serviços \":\"Cadastrar nova ordem de serviços\"}</h3>\r\n        {(props.criada)?  //se o veiculo ja foi criado, desabilita a funcao de escrever placa\r\n        <div className=\"form-group\">\r\n            <label>Código da ordem</label>\r\n            <input disabled=\"disabled\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n              value={props.ordem.id}\r\n            />\r\n        </div>\r\n        : <></>}\r\n\r\n           {/**container estado */}\r\n           <div style={{display:\"flex\", gap:\"50rem\",marginTop:\"45px\"}}>\r\n           \r\n           <div>\r\n           <label>Selecione um mecânico:</label>\r\n    <Dropdown isOpen={dropDown} toggle={toggleDrop}>\r\n        <Dropdown.Toggle caret>\r\n         {(currentFuncionario.pessoa)? currentFuncionario.pessoa.nome: \"Selecione funcionário\"}\r\n        </Dropdown.Toggle>\r\n         <Dropdown.Menu container=\"body\">\r\n            {funcionarios &&\r\n            funcionarios.map((func, index) => (\r\n              <Dropdown.Item\r\n                onClick={func!=currentFuncionario?() => setCurrentFuncionario(func): ()=>faznada}\r\n                key={index}\r\n                name=\"codFuncionario\"\r\n              >\r\n                {func.pessoa.nome}\r\n              </Dropdown.Item>\r\n            ))}\r\n         </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n          \r\n    <div className=\"list row\">\r\n      <label>Código do mecânico</label>\r\n    <input\r\n              type=\"number\"\r\n              id=\"codFuncionario\"\r\n              required\r\n              disabled\r\n              value={currentFuncionario.cod_funcionario}\r\n              name=\"codFuncionario\"\r\n            />\r\n    </div>  \r\n    \r\n    </div>\r\n    <br/>\r\n          <div className=\"form-group\">\r\n            <label>Placa</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"placa\"\r\n              disabled={true}//props.criada? true:false}\r\n              value={ props.veiculo.placa}//props.ordem.placa}\r\n              onChange={props.handleInputChange}\r\n              name=\"placa\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Data</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dataAbertura\"\r\n              value={props.ordem.dataAbertura}\r\n              onChange={props.handleInputChange}\r\n              name=\"dataAbertura\"\r\n              disabled={!props.ordem.aberto}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Valor total em peças</label>\r\n            <CurrencyInput \r\n            id=\"valorTotalPecas\"\r\n            value={props.ordem.valorTotalPecas} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            className=\"form-control\"\r\n            name=\"valorTotalPecas\"\r\n            disabled\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Valor total em mão de Obra</label>\r\n            <CurrencyInput \r\n            id=\"valorTotalMaoObra\"\r\n            value={props.ordem.valorTotalServicos} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            className=\"form-control\"\r\n            name=\"valorTotalMaoObra\"\r\n            disabled\r\n            />\r\n          </div>\r\n          {(props.criada)?  //se o veiculo ja foi criado\r\n         <div className=\"form-group\">\r\n         <label>Ordem fechada</label>\r\n         <Form.Check \r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label=\"Fechar ordem\"\r\n            checked={!props.ordem.aberto}\r\n            onChange={e => props.handleCheckChange(e)}\r\n            name=\"aberto\"\r\n          />\r\n       </div>\r\n        : <></>}\r\n          {(props.criada)?  //se o veiculo ja foi criado\r\n         <div className=\"form-group\">\r\n         <label>Veículo devolvido</label>\r\n         <Form.Check \r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label=\"Devolver veículo\"\r\n            checked={props.ordem.devolvido}\r\n            onChange={e => props.handleCheckChange(e)}\r\n            name=\"devolvido\"\r\n          />\r\n       </div>\r\n        : <></>}\r\n          \r\n          <br/>\r\n        <br/>\r\n        </div>\r\n        <br/><br/>\r\n        {props.criada? <ServicoList codOrdem={props.ordem.id}/>:<></>}\r\n        <ToastContainer className=\"p-3\" position={'bottom-center'} style={{zIndex:1050}}>\r\n\r\n      <Toast onClose={() => props.setSubmitted(false)} show={props.submitted} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Ordem salva</strong>\r\n            <small>...</small>\r\n          </Toast.Header>\r\n          <Toast.Body>ordem de serviços salva com sucesso</Toast.Body>\r\n        </Toast>\r\n        </ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrdem;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport { Link, Route,useNavigate } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useTable } from \"react-table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPenToSquare, faTrashCan, faPlus, faScrewdriverWrench } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport OrdemService from  \"../Services/OrdemService\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddOrdem from './AddOrdem';\r\nimport { getDropdownMenuPlacement } from \"react-bootstrap/esm/DropdownMenu\";\r\nimport ServicoService from  \"../Services/ServicoService\";\r\nimport moment from \"moment-timezone\";\r\nlibrary.add(faPenToSquare, faTrashCan, faPlus);\r\n\r\nconst OrdemList = (props) => {\r\n\r\n  const veiculoRef = useRef()\r\n  veiculoRef.current = props.veiculo;\r\n    const navigate = useNavigate();\r\n  const [ordens, setOrdens] = useState([]);\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const ordensRef = useRef(); //persiste entre renders ao mudar paginacao, caixa de etxto ou qqr\r\n  ordensRef.current = ordens; //lista inicial de clientes é mantida\r\n  const [page, setPage] = useState(1); //inicia na pagina 1\r\n  const [count, setCount] = useState(0); \r\n  const [pageSize, setPageSize] = useState(3); //3 itens por pag\r\n  const pageSizes = [3, 6, 9]; //itens por pagina opcoes\r\n  const [data, setData] = useState(new Date())\r\n  const initialOrdemState =\r\n    {\r\n        placa: \"\",\r\n        codFuncionario: null,\r\n        dataAbertura: moment.tz(data,\"America/Sao_Paulo\").format(\"yyyy-MM-DD\"),\r\n        valorTotalServicos: 0,\r\n        valorTotalPecas: 0,\r\n        aberto: true,\r\n        atrasado: false,\r\n        devolvido: false\r\n        }\r\n      \r\n  const [ordem, setOrdem] = useState(initialOrdemState);\r\n  //o filho acessa props.ordem e muda os valores quando tem seus inputs alterados\r\n  //a ordem é setada no filho, e salva aqui\r\n  const handleInputChange = event => {\r\n   // console.log(event.target)\r\n    const { name, value } = event.target;\r\n    setOrdem({ ...ordem, [name]: value });\r\n    console.log(ordem)\r\n  };\r\n\r\n  const handleInputCheckChange = event => {\r\n    const { name, checked } = event.target;\r\n    if(name==\"aberto\")\r\n    setOrdem({ ...ordem, [name]: !checked });\r\n    if(name==\"devolvido\")\r\n    setOrdem({ ...ordem, [name]: checked });\r\n    console.log(ordem)\r\n    };\r\n \r\n  const [ordemCriada, setOrdemCriada] = useState(false); \r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => {setShow(false); setOrdem(initialOrdemState);  setOrdemCriada(false)\r\n  }\r\n  const handleShow = () => setShow(true);\r\n  const getRequestParams = (page, pageSize) => { //parametros para Api\r\n    let params = {};\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  };\r\nconst [ajuste, setAjuste] = useState(false)\r\n\r\n  useEffect(() => {\r\n    retrieveOrdens();\r\n    setAjuste(!ajuste)\r\n  }, [page, pageSize, props.veiculo? props.veiculo: props.funcionario]); //quando muda a pagina ou pageSize, reexecuta retrieveClientes\r\n\r\n\r\n  const retrieveOrdens = () => {\r\n    const params = getRequestParams(page, pageSize); //pega parametros\r\n//acha ordens pertencentes a um veiculo\r\n    if(props.veiculo){\r\n     console.log(\"veiculo recebido de props \", props.veiculo, \"   -- veiculo salvo do props: \", veiculoRef.current)\r\n        OrdemService.findByPlaca(veiculoRef.current.placa, params)//acha lista de ordens por placa\r\n            .then(response => { \r\n              if(response.status ==204){\r\n                setOrdens([]);\r\n                return\r\n              }  \r\n               const ordensGet = response.data.ordens //lista orndensGet\r\n               const totalPages = response.data.totalPages\r\n              //Busca valores em peças e mao de obra para cada ordem da lista\r\n               ordensGet.map(ord => { //mapeia itens da lista(para cada ord de ordensGet)\r\n                ServicoService.getValores(ord.id) //get valoresP e MaoObra para o item de id\r\n                  .then(responseV =>{\r\n                    const {valorTPecas, valorTServicos} = responseV.data;\r\n                    ord.valorTotalPecas = valorTPecas //atualiza valores item\r\n                    ord.valorTotalServicos = valorTServicos //seta valores de ord\r\n                   }) \r\n                })\r\n               setOrdens(ordensGet);\r\n               setCount(totalPages);\r\n       //console.log(\"ordens com valores: \", ordens);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    } \r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handlePageSizeChange = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(1);\r\n  };\r\n\r\n  const deleteOrdem = (rowIdx) => {\r\n    const id = ordensRef.current[rowIdx].id; \r\n    OrdemService.remove(id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        retrieveOrdens();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //pega uma ordem do banco\r\n  const getOrdem = (id) =>{\r\n    OrdemService.get(id)\r\n        .then(response => {\r\n          ServicoService.getValores(response.data.id)\r\n          .then(response2 =>{\r\n            setOrdem({\r\n              id: response.data.id,\r\n              placa: response.data.placa,\r\n              codFuncionario: response.data.codFuncionario,\r\n              dataAbertura: response.data.dataAbertura,\r\n              valorTotalServicos: response2.data.valorTServicos,\r\n              valorTotalPecas: response2.data.valorTPecas,\r\n              aberto: response.data.aberto,\r\n              atrasado: response.data.atrasado,\r\n              devolvido: response.data.devolvido\r\n              });\r\n          })\r\n          .catch(e2 => {\r\n            console.log(e2);\r\n          });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n\r\n\r\n  }\r\n  //abre ordem clicada\r\n  const openOrdem = (rowIndex) => {\r\n    const id = ordensRef.current[rowIndex].id;\r\n    getOrdem(id)\r\n    setOrdemCriada(true)\r\n    handleShow() //abre modal de edição\r\n  };\r\n\r\n  //DEFINICAO TABELA\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Código da ordem\",\r\n        accessor: \"id\",\r\n      },\r\n      {\r\n        Header: \"Funcionario\",\r\n        accessor: \"funcionario.pessoa.nome\",\r\n      },\r\n      {\r\n        Header: \"Placa\",\r\n        accessor: \"placa\",\r\n      },\r\n      {\r\n        Header: \" \",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n         // console.log(props)\r\n          const rowIdx = props.row.id; //recebe o props de um elemento -> recebe o indice da linha \r\n          return (\r\n            <div className=\"row\" align=\"center\">\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => openOrdem(rowIdx)}> {/**rowIdx é o indice do cliente na lista clientes */}\r\n              <OverlayTrigger\r\n                      key={\"ed\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"ed\"}`}>\r\n                            <strong>{\"editar Ordem\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-pen-to-square\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => deleteOrdem(rowIdx)}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"deletar Ordem\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-trash-can\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div>  \r\n              <div className=\"col-sm\">\r\n              <span onClick={() => openOrdem(rowIdx)}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"Servicos\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon={faScrewdriverWrench} />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    [] \r\n  );\r\n\r\n  const rowsPersist = useRef()\r\n  //Varias funcoes que recebem dados da tabela\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ //tabela usada\r\n    columns, //colunas definidas acima\r\n    data: ordens\r\n    //dados com acessor\r\n  });\r\n  \r\n  const saveOrdem= () => { \r\n    //faz o Post\r\n  if(moment.tz(ordem.dataAbertura,\"America/Sao_Paulo\").format(\"d\")!=6 && moment.tz(ordem.dataAbertura,\"America/Sao_Paulo\").format(\"d\")!=0)\r\n    OrdemService.create(ordem.codFuncionario,props.veiculo.placa, ordem.dataAbertura) \r\n      .then(response => {\r\n        setOrdem({\r\n            id: response.data.id,\r\n            placa: response.data.placa,\r\n            codFuncionario: response.data.codFuncionario,\r\n            dataAbertura: response.data.dataAbertura,\r\n            valorTotalServicos: response.data.valorTotalServicos,\r\n            valorTotalPecas: response.data.valorTotalPecas,\r\n            aberto: response.data.aberto,\r\n            atrasado: response.data.atrasado,\r\n            devolvido: response.data.devolvido\r\n            });\r\n            retrieveOrdens();\r\n        setOrdemCriada(true)\r\n        setSubmitted(true)\r\n console.log(response)\r\n    })\r\n      .catch(e => {\r\n        console.log(e);\r\n        alert(\"Um funcionário deve ser selecionado\")\r\n      }); \r\n      else\r\n        alert(\"Ordens não podem ser criadas nos sábados e domingos\") \r\n\r\n  };\r\nconst updateOrdem = () =>{\r\n  console.log(ordem)\r\n  //faz o Put\r\n  OrdemService.update(ordem.id, ordem) \r\n  .then(response => {\r\n    setOrdem({\r\n        id: response.data.id,\r\n        placa: response.data.placa,\r\n        codFuncionario: response.data.codFuncionario,\r\n        dataAbertura: response.data.dataAbertura,\r\n        valorTotalServicos: response.data.valorTotalServicos,\r\n        valorTotalPecas: response.data.valorTotalPecas,\r\n        aberto: response.data.aberto,\r\n        atrasado: response.data.atrasado,\r\n        devolvido: response.data.devolvido\r\n        });\r\n        retrieveOrdens();\r\n    setOrdemCriada(true)\r\n    setSubmitted(true)\r\n\r\nconsole.log(response)\r\n})\r\n  .catch(e => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\n  return (\r\n    <div className=\"list row\" style={{paddingLeft: \"0rem\"}}>\r\n      <h3 align=\"center\">Gerencie as ordens de serviço do veículo</h3><br/><br/><br/><br/>\r\n      <div className=\"col-md-8\">\r\n      </div>\r\n      <div className=\"col-md-12 list\">\r\n        {/**Itens p/ pg */}\r\n      {\"Itens por página: \"} {/**handlePageSize atualiza pageSize que dispara nova busca na api pelo useEffect */}\r\n          <select onChange={handlePageSizeChange} value={pageSize}> \r\n            {pageSizes.map((size) => ( //opcao dos tamanhos que podem ser escolhidos\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/**Paginacao -> indice das paginas*/}\r\n          <Pagination\r\n            className=\"my-3\"\r\n            count={count} //contem a qtd total de paginas(paginas selecionaveis)\r\n            page={page} //ao mudar este valor, o indice(pagina selecionada) muda\r\n            siblingCount={1}\r\n            boundaryCount={1}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handlePageChange} //altera a pagina(indice) e dispara nova busca na api\r\n          />\r\n           <Button variant=\"primary\" onClick={handleShow}>\r\n        Cadastrar ordem\r\n      </Button>\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => ( //mapeia as colunas/headers extraidas\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}> {/**pega props do corpo gerado */}\r\n            {rows.map((row, i) => { //cada row recebe indice(a lista clientes tem indices)\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                   //console.log(\"celula: \", cell.value)\r\n                    return (\r\n                      <td {...cell.getCellProps()}>\r\n                         {cell.render(\"Cell\")} \r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n      <Modal show={show} onHide={handleClose} fullscreen>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{ordemCriada? \"Editar Ordem e Serviços\": \"Cadastro de Ordem de serviços\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <AddOrdem ordem={ordem} veiculo={props.veiculo} handleInputChange = {handleInputChange} criada={ordemCriada} submitted={submitted} setSubmitted={setSubmitted}\r\n         handleCheckChange={handleInputCheckChange}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={ordemCriada?updateOrdem: saveOrdem}>\r\n            Salvar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdemList;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport { Link, Route,useNavigate, useParams } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useTable } from \"react-table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPenToSquare, faTrashCan, faPlus, faClipboardList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport VeiculoService from \"../Services/VeiculoService\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AddVeiculo from './AddVeiculo';\r\nimport OrdemList from './OrdemList';\r\n\r\nlibrary.add(faPenToSquare, faTrashCan, faPlus);\r\n\r\nconst VeiculosList = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [showOrdem, setShowOrdem] = useState(false);\r\n\r\n  const handleClose = () => {setShow(false); setVeiculo(initialVeiculoState);  setVeiculoCriado(false)\r\n  }\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleCloseOrdem = () =>{ setShowOrdem(false);setVeiculo(initialVeiculoState);}\r\n  \r\n  const handleShowOrdem = () => setShowOrdem(true);\r\n\r\n\r\n  const navigate = useNavigate()\r\n  const [searchPlaca, setSearchPlaca] = useState();\r\n  const [veiculosList, setVeiculosList] = useState([])\r\n  const veiculosRef = useRef(); //persiste entre renders ao mudar paginacao, caixa de etxto ou qqr\r\n  veiculosRef.current = veiculosList; //lista inicial de clientes é mantida\r\n\r\n  const codCliente = useRef() //salva uma variavel entre renders, mas nao entre reloads\r\n  codCliente.current = props.codCliente //persiste o codigo cliente recebido por props\r\n\r\n  const {id} = useParams() //id do cliente carregado na pagina -> ver App.js :id\r\n\r\n  const [page, setPage] = useState(1); //inicia na pagina 1\r\n  const [count, setCount] = useState(0); \r\n  const [pageSize, setPageSize] = useState(3); //3 itens por pag\r\n  const pageSizes = [3, 6, 9]; //itens por pagina opcoes\r\n  \r\n  const getRequestParams = (placa, page, pageSize) => { //parametros para Api  \r\n    let params = {};\r\n\r\n    if (placa) { //se houver placa\r\n      params[\"placa\"] = placa;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params; //{placa: \"aaa\", page: 2, pageSize: 3}\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n      retrieveVeiculos(props.codCliente)\r\n  }, [page, pageSize]); //quando muda a pagina ou pageSize, reexecuta retrieveClientes\r\n\r\n  \r\n\r\n  const retrieveVeiculos = (propsCod) => {\r\n    const params = getRequestParams(searchPlaca, page, pageSize); //pega parametros\r\n\r\n    VeiculoService.findByCliente(id, params)\r\n      .then(response => {\r\n        const { veiculos, totalPages } = response.data\r\n        setVeiculosList(veiculos);\r\n        setCount(totalPages);\r\n       if(response.status ==204)\r\n            setVeiculosList([]);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handlePageSizeChange = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(1);\r\n  };\r\n  //sera executado quando o nome SearchNome for preenchido\r\n  const findByPlaca= () => {\r\n    setPage(1);\r\n    retrieveVeiculos(); //O nome se torna um parametro\r\n  };\r\n  const refreshList = () => {\r\n    retrieveVeiculos();\r\n    //setCurrentCliente(null);\r\n   // setCurrentIndex(-1);\r\n  };\r\n\r\n  /*const setActiveCliente = (cliente, index) => {\r\n    setCurrentCliente(cliente);\r\n    setCurrentIndex(index);\r\n  };*/\r\n\r\n\r\n  const onChangeSearchPlaca = (e) => {\r\n    const searchNome = e.target.value;\r\n    setSearchPlaca(searchNome);\r\n  };\r\n  const deleteVeiculo = (id) => {\r\n    const placa = veiculosRef.current[id].placa;\r\n    VeiculoService.remove(placa)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const openVeiculo = (rowIndex) => { //ao clicar em editar abre um veiculo\r\n    const placa = veiculosRef.current[rowIndex].placa; //pega sua placa na celula da tabela\r\n    getVeiculo(placa) //busca no banco\r\n    setVeiculoCriado(true) //permite edicao\r\n        handleShow() //mostra modal\r\n  };\r\n  const openOrdem = (rowIndex) => { //ao clicar em editar abre um veiculo\r\n    const placa = veiculosRef.current[rowIndex].placa; //pega sua placa na celula da tabela\r\n    getVeiculo(placa) //busca no banco\r\n    handleShowOrdem() //mostra modal\r\n  };\r\nconst getVeiculo = (placa) =>{\r\n  VeiculoService.findByPlaca(placa)\r\n      .then(response => {\r\n        setVeiculo({\r\n          placa: response.data.placa, //preenche json\r\n          marca: response.data.marca,\r\n          modelo: response.data.modelo,\r\n          ano: response.data.ano,\r\n          cor: response.data.cor,\r\n          codCliente: response.data.codCliente,\r\n          cliente: response.data.cliente\r\n      });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n}\r\n  //DEFINICAO TABELA\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Placa\",\r\n        accessor: \"placa\",\r\n      },\r\n      {\r\n        Header: \"Marca\",\r\n        accessor: \"marca\",\r\n      },\r\n      {\r\n        Header: \"Modelo\",\r\n        accessor: \"modelo\",\r\n      },\r\n      {\r\n        Header: \"ano\",\r\n        accessor: \"ano\",\r\n      },\r\n      {\r\n        Header: \" \",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id; //recebe o props de um elemento -> recebe o indice da linha\r\n          return (\r\n            <div className=\"row\" align=\"center\">\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => openVeiculo(rowIdx)}> {/**rowIdx é o indice do cliente na lista clientes */}\r\n              <OverlayTrigger\r\n                      key={\"ed\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"ed\"}`}>\r\n                            <strong>{\"editar veiculo\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-pen-to-square\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => deleteVeiculo(rowIdx)}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"deletar veiculo\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-trash-can\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div>  \r\n              <div className=\"col-sm\">\r\n              <span onClick={() => openOrdem(rowIdx)}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"ordens de serviço\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon={faClipboardList} />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div> \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\nconst [submitted, setSubmitted] = useState(false)\r\n  //Varias funcoes que recebem dados da tabela\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ //tabela usada\r\n    columns, //colunas definidas acima\r\n    data: veiculosList, //dados com accessor\r\n  });\r\n\r\n  const initialVeiculoState =\r\n  {\r\n      placa: \"\",\r\n      marca: \"\",\r\n      modelo: \"\",\r\n      ano: \"\",\r\n      cor: \"\",\r\n      codCliente: null,\r\n      cliente: null\r\n      }\r\n    \r\nconst [veiculo, setVeiculo] = useState(initialVeiculoState);\r\nconst [veiculoCriado, setVeiculoCriado] = useState(false);\r\n\r\n  const saveVeiculo= () => {\r\n    //faz o Post\r\n    VeiculoService.create(veiculo.placa, id) \r\n      .then(response => {\r\n        setVeiculo({\r\n            placa: response.data.placa,\r\n            marca: response.data.marca,\r\n            modelo: response.data.modelo,\r\n            ano: response.data.ano,\r\n            cor: response.data.cor,\r\n            codCliente: response.data.codCliente,\r\n            cliente: response.data.cliente\r\n        });\r\n        retrieveVeiculos(props.codCliente);\r\n        setVeiculoCriado(true)\r\n console.log(response)\r\n setSubmitted(true)\r\n    })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\nconst updateVeiculo = () =>{\r\n    var data = veiculo\r\n    console.log(data)\r\n    VeiculoService.update(data.placa, data)\r\n    .then(response => {\r\n      setVeiculo({\r\n        placa: response.data.placa,\r\n        marca: response.data.marca,\r\n        modelo: response.data.modelo,\r\n        ano: response.data.ano,\r\n        cor: response.data.cor,\r\n        codCliente: response.data.codCliente,\r\n        cliente: response.data.cliente\r\n    }); \r\n    retrieveVeiculos(props.codCliente);\r\n      console.log(response);//imprime pessoa atualizada\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n    setSubmitted(true)\r\n  };\r\n  const saveOrdem = () =>{}\r\n//ATRIBUI VALORES À JSON VEICULO EM TEMPO REAL\r\nconst handleInputChange = event => {\r\n  const { name, value } = event.target;\r\n  setVeiculo({ ...veiculo, [name]: value });\r\n  //console.log(value)\r\n};\r\n\r\nuseEffect(() => {\r\n  if(veiculo.cliente){\r\n    console.log(veiculo.cliente.cod_cliente)\r\n  setVeiculo({ ...veiculo, codCliente: veiculo.cliente.cod_cliente });\r\n  console.log(veiculo.codCliente)\r\n  }\r\n }, [veiculo.cliente]); \r\n\r\n  return (\r\n    <div className=\"list row\" style={{paddingLeft: \"0rem\"}}>\r\n      <h3 align=\"center\">Busque ou cadastre veículos do cliente</h3><br/><br/><br/><br/>\r\n      <h4>Procurar Veículo</h4>\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Placa do veículo\"\r\n            value={searchPlaca}\r\n            onChange={onChangeSearchPlaca}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByPlaca}\r\n            >\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12 list\">\r\n        {/**Itens p/ pg */}\r\n      {\"Itens por página: \"} {/**handlePageSize atualiza pageSize que dispara nova busca na api pelo useEffect */}\r\n          <select onChange={handlePageSizeChange} value={pageSize}> \r\n            {pageSizes.map((size) => ( //opcao dos tamanhos que podem ser escolhidos\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/**Paginacao -> indice das paginas*/}\r\n          <Pagination\r\n            className=\"my-3\"\r\n            count={count} //contem a qtd total de paginas\r\n            page={page} //ao mudar este valor, o indice muda\r\n            siblingCount={1}\r\n            boundaryCount={1}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handlePageChange} //altera a pagina(indice) e dispara nova busca na api\r\n          />\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n        Cadastrar veículo\r\n      </Button>\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => ( //mapeia as colunas/headers extraidas\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}> {/**pega props do corpo gerado */}\r\n            {rows.map((row, i) => { //cada row recebe indice(a lista clientes tem indices)\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{veiculoCriado?\"Editar veículo\":\"Cadastrar novo veículo\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <AddVeiculo veiculo ={veiculo} handleInputChange = {handleInputChange} criado={veiculoCriado} submitted={submitted} setSubmitted={setSubmitted}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={veiculoCriado?updateVeiculo: saveVeiculo}>\r\n            Salvar\r\n          </Button> \r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal show={showOrdem} onHide={handleCloseOrdem} centered size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Ordens de servico</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <OrdemList veiculo ={veiculo}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseOrdem}>\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveOrdem}>\r\n            Salvar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VeiculosList;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { IMaskInput } from \"react-imask\";\r\n\r\nexport const AddJuridica = (props) =>{\r\n    const initialJuridicaState = {\r\n        cnpj: \"\",\r\n        cod_pessoa: null\r\n    }\r\nconst [juridica, setJuridica] = useState(initialJuridicaState)\r\n    const changeHandler = event => {\r\n        const { name, value } = event.target;\r\n        setJuridica({ ...juridica, [name]: value });\r\n      };\r\n\r\nreturn (\r\n\r\n    <div className=\"submit-form\">\r\n          <div className=\"form-group\">\r\n            <IMaskInput\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"cnpj\"\r\n              placeholder = \"cnpj\"\r\n              value = {props.doc}\r\n              onChange={props.changeHandler}\r\n              name=\"cnpj\"\r\n              mask='00.000.000-0000-00'\r\n              disabled={props.initialDoc!=null}\r\n            />\r\n          </div>\r\n    </div>\r\n);\r\n}","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { IMaskInput } from \"react-imask\";\r\n\r\nexport const AddFisica = (props) =>{\r\n    const initialFisicaState = {\r\n        cpf: \"\",\r\n        cod_pessoa: null\r\n    }\r\n    useEffect(()=>{\r\n\r\n},[props]);\r\n\r\nconst [fisica, setFisica] = useState(initialFisicaState)\r\n    const changeHandler = event => {\r\n        const { name, value } = event.target;\r\n        setFisica({ ...fisica, [name]: value });\r\n      };\r\n\r\nreturn (\r\n\r\n    <div className=\"submit-form\">\r\n          <div className=\"form-group\">\r\n            <IMaskInput\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"cpf\"\r\n              placeholder = \"cpf\"\r\n              value = {props.doc}\r\n              onChange={props.changeHandler}\r\n              name=\"cpf\"\r\n              mask='000.000.000-00'\r\n              disabled={props.initialDoc!=null}\r\n            />\r\n          </div>\r\n    </div>\r\n);\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport PessoasService from \"../Services/PessoasService\";\r\nimport LocaisList from \"./LocaisList\";\r\nimport VeiculosList from \"./VeiculosList\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { faCar } from '@fortawesome/free-solid-svg-icons'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { AddJuridica } from \"./AddJuridica\";\r\nimport FisicaService from \"../Services/FisicaService\";\r\nimport JuridicaServices from \"../Services/JuridicaServices\";\r\nimport { AddFisica } from \"./AddFisica\";\r\nimport { IMaskInput } from \"react-imask\";\r\n\r\nconst Addpessoa = (props) => {\r\n  const [lgShow, setLgShow] = useState(false);\r\n//JSON CLIENTE\r\n  const initialPessoaState =\r\n    {\r\n        cod_pessoa: null,\r\n        nome: \"\",\r\n        endereco: \"\",\r\n        telefone: \"\",\r\n        cidade:\tnull\r\n        }\r\n  //Se o pai tiver recebido um cliente na pathvariable, carrega a pessoa desse cliente      \r\n  const [pessoa, setPessoa] = useState(initialPessoaState);\r\n  const [tipo, setTipo] = useState(\"---\")\r\n  const [initialDocumento, setInitialDocumento] = useState()\r\n  const [documento, setDocumento] = useState()\r\n  useEffect(() => {  \r\n    if(props.cliente) {\r\n    if(props.cliente.cod_cliente)\r\n        setPessoa(props.cliente.pessoa); \r\n    if(props.cliente.pessoa)\r\n          getTipoAndDocumento()\r\n        }}, [props.cliente? props.cliente.cod_cliente: 0]);\r\n\r\n  useEffect(() => {  \r\n    if(props.funcionario) {\r\n    if(props.funcionario.cod_funcionario)\r\n        setPessoa(props.funcionario.pessoa); \r\n    if(props.funcionario.pessoa)\r\n          getTipoAndDocumento()\r\n}}, [props.funcionario? props.funcionario.cod_funcionario: 0]);\r\n  \r\n  //Dado o codigo da pessoa, identifica se e fisica/juridica e extrai sue documento\r\n  const getTipoAndDocumento = () =>{\r\n      FisicaService.findByPessoa(props.cliente? props.cliente.pessoa.cod_pessoa: props.funcionario.pessoa.cod_pessoa)\r\n        .then(response => {\r\n          const {cpf} = response.data;\r\n          setInitialDocumento(cpf)\r\n          setDocumento(cpf)\r\n          setTipo(\"fisica\")\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n\r\n        JuridicaServices.findByPessoa(props.cliente? props.cliente.pessoa.cod_pessoa: props.funcionario.pessoa.cod_pessoa)\r\n        .then(response => {\r\n          const {cnpj} = response.data;\r\n          setDocumento(cnpj)\r\n          setInitialDocumento(cnpj)\r\n          setTipo(\"juridica\")\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    \r\n  }\r\n\r\n  const changeCidade = (cd) =>{\r\n    setPessoa({...pessoa, cidade:cd})\r\n} \r\n  //ATRIBUI VALORES À JSON EM TEMPO REAL\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setPessoa({ ...pessoa, [name]: value });\r\n  };\r\n\r\n\r\n  //RESETA JSON\r\n  const newPessoa = () => {\r\n    setPessoa(initialPessoaState);\r\n  };\r\n\r\n  //Muda o estado do pai AddCliente para submitted\r\n  const changeParentSubmit = ()=>{\r\n    props.changePaiSubmit();\r\n  }\r\n\r\n  const handleTipoChange = event => {\r\n    const value = event.target.name;\r\n    setTipo(value);\r\n    //console.log(tipo)\r\n  };\r\n\r\n\r\nconst changeDocumento = (event)=>{\r\n  setDocumento(event.target.value)\r\n  //console.log(cnpj)\r\n}\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <div>\r\n        {props.cliente?\r\n        <h4>Cadastro de Clientes</h4>\r\n        :<h4>Cadastro de colaboradores</h4>\r\n      }\r\n      <hr/>\r\n        {pessoa.cod_pessoa? \r\n        <div className=\"form-group\">\r\n            <label>{props.cliente? \"Código do cliente\" : \"Código do funcionário\"}</label>\r\n            <input disabled=\"disabled\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n              value={props.cliente? props.cliente.cod_cliente: props.funcionario.cod_funcionario}\r\n            />\r\n        </div>\r\n        : <></>}\r\n          <div className=\"form-group\">\r\n            <label>Nome</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"nome\"\r\n              required\r\n              value={pessoa.nome}\r\n              onChange={handleInputChange}\r\n              name=\"nome\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Endereço</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"endereco\"\r\n              value={pessoa.endereco}\r\n              onChange={handleInputChange}\r\n              name=\"endereco\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Telefone</label>\r\n            <IMaskInput\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"telefone\"\r\n              value={pessoa.telefone}\r\n              onChange={handleInputChange}\r\n              name=\"telefone\"\r\n              mask='(00)00000-0000'\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Tipo de pessoa: </label><br/>\r\n            <Form>\r\n            <div key={`inline-${\"radio\"}`} className=\"mb-3\">\r\n            <Form.Check\r\n            inline\r\n            label=\"Fisica\"\r\n            name=\"fisica\"\r\n            type=\"radio\"\r\n            id=\"inline-radio-1\"\r\n            checked ={tipo==\"fisica\"? true:false}\r\n            onChange={handleTipoChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"Juridica\"\r\n            name=\"juridica\"\r\n            type=\"radio\"\r\n            id=\"inline-radio-2\"\r\n            checked ={tipo==\"juridica\"? true:false}\r\n            onChange={handleTipoChange}\r\n          />\r\n          <Form.Check\r\n            inline\r\n            label=\"---\"\r\n            name=\"---\"\r\n            type=\"radio\"\r\n            id=\"inline-radio-3\"\r\n            checked ={tipo==\"---\"? true:false}\r\n            onChange={handleTipoChange}\r\n          />\r\n          </div></Form>\r\n          {tipo!=\"---\"?\r\n          <div>\r\n            {tipo ==\"juridica\"?\r\n              <AddJuridica changeHandler={changeDocumento} doc={documento} initialDoc={initialDocumento}/>:\r\n              <AddFisica changeHandler={changeDocumento} doc={documento} initialDoc={initialDocumento}/>\r\n          }\r\n          </div>\r\n          :<></>}\r\n          </div>\r\n            \r\n          <br/> \r\n        <div style={{display:\"flex\", gap:\"30%\"}} className=\"form-group\">\r\n        <div>\r\n            <LocaisList personType = {tipo} documento ={documento} pessoa ={pessoa} changeCidade = {changeCidade}  changeVoSubmit={changeParentSubmit}  operacao={props.cliente? 1:0}/>\r\n        </div>\r\n        {(props.cliente && props.cliente.cod_cliente != null)?\r\n        <div>\r\n          Veículos do cliente: \r\n          <span onClick={() => setLgShow(true)} style={{margin: \"1rem\"}}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"vel\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"Veículos\"}</strong>.\r\n                          </Tooltip>\r\n                        }> \r\n                      <FontAwesomeIcon icon={faCar}/>\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n            \r\n            <Modal\r\n            scrollable={true}\r\n        show={lgShow}\r\n        onHide={() => setLgShow(false)}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            Veículos do cliente\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body><VeiculosList codCliente = {props.cliente.cod_cliente}/></Modal.Body>\r\n      </Modal>\r\n          </div> : <></>\r\n        }        \r\n        </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addpessoa;","import React, { useState, useEffect } from \"react\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport Addpessoa  from \"./AddPessoa\";\r\nimport {Navigate, useParams, Link, useNavigate} from \"react-router-dom\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nconst AddCliente = () => {\r\n  const navigate = useNavigate()\r\n    //JSON CLIENTE\r\n  const initialClienteState = {\r\n    cod_cliente: null,\r\n    pessoa: null\r\n    }\r\n//cliente começa sendo nulo\r\n  const [cliente, setCliente] = useState(initialClienteState);\r\n\r\n//path variable\r\nconst { id }= useParams();\r\n //se houver path variable\r\n  useEffect(() => {\r\n    if (id)\r\n      getCliente(id);\r\n  }, [id]);\r\n//Le cliente passada como pathVariable\r\nconst getCliente = id => {\r\n    ClienteService.get(id)\r\n      .then(response => {\r\n        setCliente(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //a form comeca falsa, nao enviada\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  //RESETA JSON\r\n  const newCliente = () => {\r\n    setCliente(initialClienteState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  //quando um cliente for salvo, o filho muda a variavel submitted e renderiza a mensagem de salvo\r\n  const changeSubmitted = () =>{\r\n    setSubmitted(true) \r\n    setProgressCounter(100)\r\n  };\r\n\r\n  //Conta 4s sempre que mudar a variavle submitted e em seguida retorna para seu valor original \r\n  useEffect(() => {\r\n    const timeId = setTimeout(\r\n      () => setSubmitted(false), //\"de\"renderiza a mensagem\r\n      5000\r\n    );\r\n    return () => {\r\n      clearTimeout(timeId)\r\n      //navigate(`/clientes/edit/${cliente.cod_cliente}`, {replace:true})\r\n    }\r\n  }, [submitted]);\r\n\r\n  //Barra de progresso de 5s(de 20 em 20 fica ruim... e 5s e mto tempo)\r\n  const [progressCounter, setProgressCounter] = useState(0); //barra vai de 0 a 100\r\n  React.useEffect(() => { //executa se o valor da barra for maior que 0\r\n    const timer = progressCounter > 0 && setTimeout( //executa a timeOut do react\r\n      () => setProgressCounter(progressCounter - 1), 40 //a cada segundo, decrementa 20 unidades da barra(em 5s progress=0)\r\n      ); //para 4s é preciso 25 decrementos p s, ou seja, executar 25 vezes em 1s\r\n      return () => clearInterval(timer);\r\n  }, [progressCounter]); //executa quando mudar o valor da barra\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"submit-form\" style={{paddingLeft:\"50px\", paddingTop:\"30px\",width:\"95%\"}}>\r\n        <div>\r\n            <Addpessoa cliente = {cliente} changePaiSubmit ={changeSubmitted}/>\r\n        </div>\r\n        <ToastContainer className=\"p-3\" position={\"bottom-center\"}>\r\n          <Toast show={submitted}>\r\n            <Toast.Header closeButton={false}>\r\n              <strong className=\"me-auto\">Cliente salvo</strong>\r\n            </Toast.Header>\r\n            <Toast.Body><ProgressBar animated now={progressCounter} /></Toast.Body>\r\n          </Toast>\r\n        </ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCliente;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport { Link, Route,useNavigate } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useTable } from \"react-table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPenToSquare, faTrashCan, faPlus, faPowerOff, faUserSlash, faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nlibrary.add(faPenToSquare, faTrashCan, faPlus,faPowerOff,faUserSlash,faEyeSlash,faEye);\r\n\r\nconst ClienteList = (props) => {\r\n    const navigate = useNavigate();\r\n  const [clientes, setClientes] = useState([]);\r\n  /*const [currentCLiente, setCurrentCliente] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);*/\r\n  const [searchNome, setSearchNome] = useState(\"\");\r\n  const clientesRef = useRef(); //persiste entre renders ao mudar paginacao, caixa de etxto ou qqr\r\n  clientesRef.current = clientes; //lista inicial de clientes é mantida\r\n  const [page, setPage] = useState(1); //inicia na pagina 1\r\n  const [count, setCount] = useState(0); \r\n  const [pageSize, setPageSize] = useState(3); //3 itens por pag\r\n  const pageSizes = [3, 6, 9]; //itens por pagina opcoes\r\n  const getRequestParams = (searchNome, page, pageSize) => { //parametros para Api\r\n    let params = {};\r\n\r\n    if (searchNome) { //se houver SearchNome, se torna parametro\r\n      params[\"nome\"] = searchNome;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    retrieveClientes();\r\n  }, [page, pageSize]); //quando muda a pagina ou pageSize, reexecuta retrieveClientes\r\n\r\n  \r\n\r\n  const retrieveClientes = () => {\r\n    const params = getRequestParams(searchNome, page, pageSize); //pega parametros\r\n\r\n    ClienteService.getAll(params)\r\n      .then(response => {\r\n        const { clientes, totalPages } = response.data\r\n        setClientes(clientes);\r\n        setCount(totalPages);\r\n\r\n       if(response.status ==204)\r\n           setClientes([])\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handlePageSizeChange = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(1);\r\n  };\r\n  //sera executado quando o nome SearchNome for preenchido\r\n  const findByNome= () => {\r\n    setPage(1);\r\n    retrieveClientes(); //O nome se torna um parametro\r\n  };\r\n  const refreshList = () => {\r\n    retrieveClientes();\r\n    //setCurrentCliente(null);\r\n   // setCurrentIndex(-1);\r\n  };\r\n\r\n  /*const setActiveCliente = (cliente, index) => {\r\n    setCurrentCliente(cliente);\r\n    setCurrentIndex(index);\r\n  };*/\r\n\r\n  const removeAllClientes = () => {\r\n    ClienteService.removeAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const onChangeSearchNome = (e) => {\r\n    const searchNome = e.target.value;\r\n    setSearchNome(searchNome);\r\n  };\r\n  const deleteCliente = (id) => {\r\n    const codcli = clientesRef.current[id].cod_cliente;\r\n    ClienteService.remove(codcli)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\nconst telaCadastro = ()=>{\r\n  navigate(\"/add\")\r\n}\r\n  const openCliente = (rowIndex) => {\r\n    const id = clientesRef.current[rowIndex].cod_cliente;\r\n    if(clientesRef.current[rowIndex].cAtivo)\r\n      navigate(\"/clientes/edit/\" + id);\r\n    else\r\n      alert(\"Cliente inativo\")  \r\n  };\r\n\r\n  //DEFINICAO TABELA\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Nome\",\r\n        accessor: \"pessoa.nome\",\r\n      },\r\n      {\r\n        Header: \"Telefone\",\r\n        accessor: \"pessoa.telefone\",\r\n      },\r\n      {\r\n        Header: \"Cidade\",\r\n        accessor: \"pessoa.cidade.name\",\r\n      },\r\n      {\r\n        Header: \" \",\r\n        accessor: \"actions\",\r\n        Cell: (props) => { //gera varias linhas\r\n          const rowIdx = props.row.id; //recebe o props de um elemento -> recebe o indice da linha que ta sendo gerada, é gerada uma linha pra cada cliente da lista clientesRef\r\n          return (\r\n            <div className=\"row\" align=\"center\">\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => openCliente(rowIdx)}> {/**rowIdx é o indice do cliente clicado na lista clientes */}\r\n              <OverlayTrigger\r\n                      key={\"ed\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"ed\"}`}>\r\n                            <strong>{\"editar cliente\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-pen-to-square\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => deleteCliente(rowIdx)}> \r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{clientesRef.current[rowIdx].cAtivo? \"Desativar cliente\":\"Reativar cliente\"}</strong>.{/**acessando cliente da linha rowIdx*/}\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon={clientesRef.current[rowIdx].cAtivo?\"fa-solid fa-power-off\":\"fa-solid fa-user-slash\"} />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div>  \r\n              <div className=\"col-sm\">\r\n              <span onClick={() => navigate(\"/add\")}>\r\n              <OverlayTrigger\r\n              delay={{hide: 5 }}\r\n                      key={\"cri\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"cri\"}`}>\r\n                            <strong>{\"novo cliente\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-plus\" />\r\n                    </OverlayTrigger>\r\n              </span>\r\n              </div> \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  //Varias funcoes que recebem dados da tabela\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ //tabela usada\r\n    columns, //colunas definidas acima\r\n    data: clientes, //dados com acessor, sera gerada uma linha pra cada cliente da lista\r\n  });\r\n\r\n\r\n  //constantes que mostram ou nao usuario inativo\r\n  const [showInativos, setShowInativos] = useState(false)\r\n  const onclickEye = () =>{\r\n    setShowInativos(!showInativos)\r\n  }\r\n\r\n  return (\r\n    <div className=\"list row\" style={{paddingLeft:\"50px\", paddingTop:\"30px\",width:\"95%\"}}>\r\n      <h3 align=\"center\">Clientes</h3><br/><br/><br/>\r\n      <hr/>\r\n      <h4>Procurar Cliente</h4>\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Nome do cliente\"\r\n            value={searchNome}\r\n            onChange={onChangeSearchNome}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByNome}\r\n            >\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12 list\">\r\n        {/**Itens p/ pg */}\r\n      {\"Itens por página: \"} {/**handlePageSize atualiza pageSize que dispara nova busca na api pelo useEffect */}\r\n          <select onChange={handlePageSizeChange} value={pageSize}> \r\n            {pageSizes.map((size) => ( //opcao dos tamanhos que podem ser escolhidos\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/**Paginacao -> indice das paginas*/}\r\n          <div style={{display:\"flex\"}}>\r\n          <div style={{flex:\"80%\"}}>\r\n          <Pagination\r\n            className=\"my-3\"\r\n            count={count} //contem a qtd total de paginas(paginas selecionaveis)\r\n            page={page} //ao mudar este valor, o indice(pagina selecionada) muda\r\n            siblingCount={1}\r\n            boundaryCount={1}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handlePageChange} //altera a pagina(indice) e dispara nova busca na api\r\n          /></div>\r\n          <div style={{flex:\"20%\", marginTop:\"15px\"}}>\r\n          <span onClick={() => onclickEye()}>\r\n          <OverlayTrigger\r\n          delay={{hide: 5 }}\r\n              key={\"del\"}\r\n              placement={\"top\"}\r\n                overlay={\r\n                  <Tooltip id={`tooltip-${\"del\"}`}>\r\n                    <strong>{showInativos? \"Ocultar clientes inativos\":\"Mostrar clientes inativos\"}</strong>.{/**acessando cliente da linha rowIdx*/}\r\n                  </Tooltip>\r\n                }>  \r\n            <FontAwesomeIcon icon={showInativos?\"fa-solid fa-eye\":\"fa-solid fa-eye-slash\"} />\r\n          </OverlayTrigger>\r\n          </span>\r\n          </div>\r\n          <div style={{flex:\"20%\"}}>\r\n          <button onClick={telaCadastro} className=\"btn btn-primary\" style={{height:\"auto\"}}>Cadastrar cliente</button>\r\n          </div>\r\n          </div>\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => ( //mapeia as colunas/headers extraidas\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}> {/**pega props do corpo gerado */}\r\n            {rows.map((row, i) => { //cada row recebe indice(a lista clientes tem indices)\r\n              prepareRow(row); {console.log(row)}\r\n              if(row.original.cAtivo) //se o cliente tiver ativo, imprime a sua linha(table row) com celulas dentro\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n              else if(showInativos)//se não... apenas imprime se showInativos estiver true\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClienteList;","import { Draggable } from \"react-beautiful-dnd\";\r\nimport React, { Component }  from 'react';\r\n\r\n\r\nexport const Drag = ({ id, index, ...props }) => {\r\n  return (\r\n    <Draggable draggableId={id} index={index}>\r\n      {(provided, snapshot) => {\r\n        return (\r\n          //Cada dragable tem um div da classe dragable, que é filho de um Drop\r\n          <div\r\n            ref={provided.innerRef}\r\n            className={snapshot.isDragging ? \"draggable dragging\" : \"draggable\"}\r\n            {...provided.draggableProps}\r\n            {...props}\r\n          >\r\n            <div className=\"drag-handle\" {...provided.dragHandleProps}>\r\n              {props.children}{\" \"}\r\n              {/**cada cartao dragable é da classe drag_handle filho de dragable */}\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport React, { Component }  from 'react';\r\nexport const Drop = ({ id, type, ...props }) => {\r\n  return (\r\n    <Droppable droppableId={id} type={type}>\r\n      {(provided, snapshot) => {\r\n        return (\r\n          //cada dropable é um div\r\n          <div\r\n            ref={provided.innerRef}\r\n            className={\r\n              snapshot.isDraggingOver ? \"droppable dropping\" : \"droppable\"\r\n            }\r\n            {...provided.droppableProps}\r\n            {...props}\r\n          >\r\n            {props.children} {/**imprime tudo que é filho de <Prop/> */}\r\n            {provided.placeholder}\r\n          </div>\r\n        );\r\n      }}\r\n    </Droppable>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport VeiculoService from \"../Services/VeiculoService\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport FuncionarioService from \"../Services/FuncionarioService\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\nimport ServicoList from \"./ServicoList\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport OrdemService from \"../Services/OrdemService\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { BiWindows } from \"react-icons/bi\";\r\nimport moment from \"moment-timezone\";\r\nimport CurrencyInput from 'react-currency-input';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport AddVeiculo from './AddVeiculo';\r\nconst CadastroDeOrdemCalendario = (props) => {\r\n\r\nconst navigate = useNavigate()\r\nconst [data, setData] = useState(new Date())\r\n  //estado inicial da ordem\r\n  const initialOrdemState = {\r\n    id: null,\r\n    placa: null,\r\n    codFuncionario: null,\r\n    dataAbertura:  moment.tz(data,\"America/Sao_Paulo\").format(\"yyyy-MM-DD\"),\r\n    valorTotalPecas: 0,\r\n    valorTotalServicos: 0,\r\n    aberto: true,\r\n    atrasado: false,\r\n    devolvido: false\r\n  }\r\n\r\n  //ordem\r\n  const [ordem, setOrdem] = useState(initialOrdemState)\r\n\r\n  //ordem criada?\r\n  const [criada, setCriada] = useState(false)\r\n  const [submitted, setSubmitted] = useState(false)\r\n  //OnChange dos Inputs altera estado da ordem\r\n  const handleInputChange = (event) =>{\r\n    const {name, value} = event.target;\r\n    setOrdem({...ordem, [name]:value});\r\n  }\r\n  \r\n  //dropdown de funcionarios\r\n    const initialFunc = {codFuncionario: null}\r\n    const [funcionarios, setFuncionarios] = useState([])\r\n    const [currentFuncionario, setCurrentFuncionario] = useState(initialFunc)\r\n    const [dropDown, setDropDown] = useState(false)\r\n\r\n   //ao selecionar um funcionario do dropdown, atualiza ordem no campo codFuncionario\r\nuseEffect(()=>{\r\n  setOrdem({...ordem, codFuncionario: currentFuncionario.cod_funcionario})\r\n}, [currentFuncionario])\r\n\r\n\r\n  //verifica se esta editando uma ordem de um cartão\r\n  useEffect(()=>{\r\n    if(props.ordemAberta){\r\n      console.log(props.ordemAberta)\r\n      setCriada(true)\r\n      setOrdem(props.ordemAberta)\r\n    }\r\n  },[props])\r\n\r\n    //lista de funcionarios disponiveis\r\n    useEffect(() => {\r\n      retrieveFuncionarios(); \r\n    }, []);\r\n    const retrieveFuncionarios = () => {\r\n      FuncionarioService.getLista()\r\n        .then(response => {\r\n          setFuncionarios(response.data);\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    };\r\n\r\n    //atualiza o campo codFuncionario de uma ordem existente, atualiza seu campo funcionario\r\n    useEffect(() => {\r\n      if(criada)\r\n          getCurrentFuncionario();\r\n    }, [ordem.codFuncionario]);\r\n\r\n    const getCurrentFuncionario = () =>{\r\n      FuncionarioService.get(ordem.codFuncionario)\r\n      .then(response => {\r\n        setCurrentFuncionario(response.data);\r\n        //console.log(\"funcionario atual \", response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n    }\r\n\r\n  //caso o mesmo funcionario seja slecionado\r\n  const faznada = () =>{}\r\n\r\n  //abre/fecha dropdown\r\n  const toggleDrop = () =>{\r\n    setDropDown(!dropDown)\r\n  }\r\n\r\n  //mostra Toast de placa nao encontrada\r\n  const [nfoundPlaca, setNfoundPlaca] = useState(false)\r\n\r\n  //Tenta salvar a ordem preenchida\r\n  const salvaOrdem = () =>{\r\n    //so permite salvar se nao for sabado ou domingo\r\n  if(moment.tz(ordem.dataAbertura,\"America/Sao_Paulo\").format(\"d\")!=6 && moment.tz(ordem.dataAbertura,\"America/Sao_Paulo\").format(\"d\")!=0)\r\n    //primeiro verifica se a placa esta cadastrada\r\n    VeiculoService.findByPlaca(ordem.placa)\r\n    .then(response =>{\r\n      console.log(response.data.cliente)\r\n      if(response.data.cliente.cAtivo)\r\n        return response.data.placa\r\n      else\r\n        alert(\"Cliente inativo!\")  \r\n    }) //depois cadastra a ordem usando a placa\r\n    .then( placa =>{\r\n      OrdemService.create(currentFuncionario.cod_funcionario, placa, ordem.dataAbertura)\r\n      .then(response2=>{\r\n        setOrdem({\r\n          id: response2.data.id,\r\n          placa: response2.data.placa,\r\n          codFuncionario: response2.data.codFuncionario,\r\n          dataAbertura: response2.data.dataAbertura,\r\n          valorTotalServicos: response2.data.valorTotalServicos,\r\n          valorTotalPecas: response2.data.valorTotalPecas,\r\n          aberto: response2.data.aberto,\r\n          atrasado: response2.data.atrasado,\r\n          devolvido: response2.data.devolvido\r\n          });\r\n          console.log(\"ordem criada: \",ordem)\r\n          setCriada(true)\r\n          setSubmitted(true)\r\n          props.changeCrud()\r\n      })\r\n      .catch(e2 =>{\r\n        console.log(e2)\r\n      })\r\n   }) //se a placa nao estiver cadastrada...\r\n    .catch(e => {\r\n      console.log(e);\r\n      setNfoundPlaca(true)\r\n    });\r\n    else\r\n      alert(\"Ordens não podem ser criadas nos sábados e domingos\")\r\n  }\r\n\r\n //Faz update da ordem preenchida\r\n  const updateOrdem = () =>{\r\n    console.log(\"ordem a ser atualizada\", ordem)\r\n    //faz o Put, a placa ja esta setada\r\n    OrdemService.update(ordem.id, ordem) \r\n    .then(response => {\r\n      setOrdem({\r\n          id: response.data.id,\r\n          placa: response.data.placa,\r\n          codFuncionario: response.data.codFuncionario,\r\n          dataAbertura: response.data.dataAbertura,\r\n          valorTotalServicos: response.data.valorTotalServicos,\r\n          valorTotalPecas: response.data.valorTotalPecas,\r\n          aberto: response.data.aberto,\r\n          atrasado: response.data.atrasado,\r\n          devolvido: response.data.devolvido\r\n          });\r\n          setCriada(true)\r\n          setSubmitted(true)\r\n          console.log(response)\r\n         window.location.reload()\r\n  })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  const handleCheckChange = event => {\r\n    const { name, checked } = event.target;\r\n    if(name==\"aberto\")\r\n    setOrdem({ ...ordem, [name]: !checked });\r\n    if(name==\"devolvido\")\r\n    setOrdem({ ...ordem, [name]: checked });\r\n    console.log(ordem)\r\n    };\r\n\r\n\r\n    //estado inicial de veiculo --> nenhum\r\n    const initialVeiculoState =\r\n  {\r\n      placa: \"\",\r\n      marca: \"\",\r\n      modelo: \"\",\r\n      ano: \"\",\r\n      cor: \"\",\r\n      codCliente: null,\r\n      cliente: null\r\n      }\r\n//veiculo ao qual se refere a placa    \r\nconst [veic, setVeic] = useState(initialVeiculoState)\r\nconst [veiculoSubmitted, setVeiculoSubmitted] = useState(false)\r\n\r\n//busca dono do veiculo ao buscar por placa\r\n    const busacprop = () =>{\r\n      VeiculoService.findByPlaca(ordem.placa)\r\n      .then(response => {\r\n        setVeic(response.data)\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n    }\r\n\r\n    //permite alterar veiculo\r\n    const handleChangeVeic = event => {\r\n      const { name, value } = event.target;\r\n      setVeic({ ...veic, [name]: value });\r\n      console.log(value)\r\n    };\r\n    //handle change codCliente que é o unico campo nao preenchido por uma form\r\n    useEffect(() => {\r\n      if(veic.cliente){\r\n      setVeic({ ...veic, codCliente: veic.cliente.cod_cliente });\r\n      }\r\n     }, [veic.cliente]); \r\n\r\n    ///update de veiculo\r\n    const updateVeiculo = () =>{\r\n      var data = veic\r\n      //console.log(data)\r\n      VeiculoService.update(data.placa, data)\r\n      .then(response => {\r\n        setVeic({\r\n          placa: response.data.placa,\r\n          marca: response.data.marca,\r\n          modelo: response.data.modelo,\r\n          ano: response.data.ano,\r\n          cor: response.data.cor,\r\n          codCliente: response.data.codCliente,\r\n          cliente: response.data.cliente\r\n      });\r\n       // console.log(response);//imprime pessoa atualizada\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n      setVeiculoSubmitted(true)\r\n    };\r\n\r\n    const [showEdit, setShowEdit] = useState(false);\r\n  \r\n    const handleCloseEdit = () => {setShowEdit(false); setVeic(initialVeiculoState);\r\n    }\r\n    const handleShowEdit = () => setShowEdit(true);\r\n\r\n  //Renderiza componente\r\n  return (\r\n    <div className=\"submit-form\">\r\n      <div>\r\n      <h3 align=\"center\">Ordem de Serviço</h3>\r\n        {(criada)?  //se o veiculo ja foi criado, desabilita a funcao de escrever placa\r\n        <div className=\"form-group\">\r\n            <label>Código da ordem</label>\r\n            <input disabled=\"disabled\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n              value={ordem.id}\r\n            />\r\n        </div>\r\n        : <></>}\r\n\r\n           {/**container estado */}\r\n           <div style={{display:\"flex\", gap:\"5rem\",marginTop:\"45px\"}}>\r\n           \r\n           <div>\r\n           <label>Selecione um colaborador:</label>\r\n    <Dropdown isOpen={dropDown} toggle={toggleDrop}>\r\n        <Dropdown.Toggle caret>\r\n         {(currentFuncionario.pessoa)? currentFuncionario.pessoa.nome: \"Selecione colaborador\"}\r\n        </Dropdown.Toggle>\r\n         <Dropdown.Menu container=\"body\">\r\n            {funcionarios &&\r\n            funcionarios.map((func, index) => (\r\n              <Dropdown.Item\r\n                onClick={func!=currentFuncionario?() => setCurrentFuncionario(func): ()=>faznada}\r\n                key={index}\r\n                name=\"codFuncionario\"\r\n              >\r\n                {func.pessoa.nome}\r\n              </Dropdown.Item>\r\n            ))}\r\n         </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n          \r\n    <div>\r\n      <label>Código do colaborador</label><br/>\r\n    <input style={{width:\"45px\", backgroundColor:\"transparent\", border:\"0px\"}}\r\n              type=\"number\"\r\n              id=\"codFuncionario\"\r\n              required\r\n              disabled\r\n              value={currentFuncionario.cod_funcionario}\r\n              name=\"codFuncionario\"\r\n            />\r\n    </div>  \r\n    \r\n    </div>\r\n    <br/>\r\n          <div className=\"form-group\">\r\n            <label>Placa</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"placa\"\r\n              disabled={criada? true:false}\r\n              value={ordem.placa}\r\n              onChange={handleInputChange}\r\n              name=\"placa\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={busacprop}\r\n            >\r\n              Buscar\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Proprietário</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"proprietario\"\r\n              disabled\r\n              value={veic.cliente?veic.cliente.pessoa.nome:\" \"}\r\n              name=\"proprietario\"\r\n            />\r\n          </div>\r\n          <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={handleShowEdit}\r\n              hidden = {veic.cliente==null}\r\n            >\r\n              Editar veículo\r\n            </button>\r\n          <div className=\"form-group\">\r\n            <label>Data</label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dataAbertura\"\r\n              value={ordem.dataAbertura}\r\n              onChange={handleInputChange}\r\n              name=\"dataAbertura\"\r\n              disabled={!ordem.aberto}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Valor total em peças</label>\r\n            <CurrencyInput \r\n            id=\"valorTotalPecas\"\r\n            value={ordem.valorTotalPecas} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            className=\"form-control\"\r\n            name=\"valorTotalPecas\"\r\n            disabled\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Valor total em mão de Obra</label>\r\n            <CurrencyInput \r\n            id=\"valorTotalMaoObra\"\r\n            value={ordem.valorTotalServicos} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            className=\"form-control\"\r\n            name=\"valorTotalMaoObra\"\r\n            disabled\r\n            />\r\n          </div>\r\n          {(criada)?  //se o veiculo ja foi criado\r\n         <div className=\"form-group\">\r\n         <label>Ordem fechada</label>\r\n         <Form.Check \r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label=\"Fechar ordem\"\r\n            checked={!ordem.aberto}\r\n            onChange={e => handleCheckChange(e)}\r\n            name=\"aberto\"\r\n          />\r\n       </div>\r\n        : <></>}\r\n          {(criada)?  //se o veiculo ja foi criado\r\n         <div className=\"form-group\">\r\n         <label>Veículo devolvido</label>\r\n         <Form.Check \r\n            type=\"switch\"\r\n            id=\"custom-switch\"\r\n            label=\"Devolver veículo\"\r\n            checked={ordem.devolvido}\r\n            onChange={e => handleCheckChange(e)}\r\n            name=\"devolvido\"\r\n          />\r\n       </div>\r\n        : <></>}\r\n\r\n          <br/>\r\n          <div style={{position:\"absolute\",right:\"10px\"}}>\r\n            <Button onClick={criada?updateOrdem:salvaOrdem}>Salvar ordem</Button>\r\n            </div>\r\n        <br/>\r\n        </div>\r\n        <br/><br/>\r\n        {criada?<ServicoList codOrdem={ordem.id} setUpdated={props.setUpdated}/>:<></>}\r\n        \r\n        <ToastContainer className=\"p-3\" position={'bottom-center'} style={{zIndex:1050}}>\r\n\r\n      <Toast onClose={() => setSubmitted(false)} show={submitted} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Ordem salva</strong>\r\n            <small>...</small>\r\n          </Toast.Header>\r\n          <Toast.Body>ordem de serviço salva com sucesso</Toast.Body>\r\n        </Toast>\r\n        </ToastContainer>\r\n\r\n\r\n    <ToastContainer className=\"p-3\" position={'bottom-end'} style={{zIndex:1050}}>\r\n      <Toast onClose={() => setNfoundPlaca(false)} show={nfoundPlaca} delay={3000} autohide>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Veículo não cadastrado</strong>\r\n            <small>...</small>\r\n          </Toast.Header>\r\n          <Toast.Body>A placa do veículo não foi encontrada</Toast.Body>\r\n        </Toast>\r\n        </ToastContainer>\r\n\r\n\r\n\r\n\r\n\r\n        <Modal show={showEdit} onHide={handleCloseEdit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{\"Editar veículo\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         <AddVeiculo veiculo ={veic} handleInputChange = {handleChangeVeic} criado={true} submitted={veiculoSubmitted} setSubmitted={setVeiculoSubmitted}/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseEdit}>\r\n            Voltar\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={updateVeiculo}>\r\n            Salvar\r\n          </Button> \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CadastroDeOrdemCalendario;","import {\r\n  Button,\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText\r\n} from \"reactstrap\";\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { BiChevronDown, BiChevronUp } from \"react-icons/bi\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilePen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport CadastroDeOrdemCalendario from \"../components/CadastroDeOrdemCalendario\";\r\nimport ServicoService from \"../Services/ServicoService\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport CurrencyInput from 'react-currency-input';\r\nimport '../styles.css'\r\n\r\nexport const Cartao = (props) => {\r\nuseEffect(()=>{},[props])\r\n\r\n  const [collapse, setCollapse] = useState(false);\r\n  const toggle = () => setCollapse(!collapse);\r\n\r\n  const [item, setItem] = useState(props.item);\r\n  const colorBody = item.aberto? \"lightblue\" : \"green\" //orden fechada = verde\r\n  const colorHead = item.devolvido? \"blue\" : colorBody //veiculo devolvido -> header azul\r\n\r\n  const setValores = () =>{\r\n    ServicoService.getValores(item.id)\r\n    .then(response =>{\r\n      setItem({...item, valorTotalPecas: response.data.valorTPecas})\r\n      setItem({...item, valorTotalServicos : response.data.valorTServicos})\r\n      console.log(response)\r\n    })\r\n  }\r\n  const [showOrdem, setShowOrdem] = useState(false);\r\n\r\n  const [ordemUpdated, setOrdemUpdated] = useState(false)\r\n  const handleCloseOrdem = () => {//ao fechar a janela de edição de ordem, recarrega as ordens\r\n    setShowOrdem(false); \r\n\r\n    //recarrega ordens se serviços foram adicionados/editados/deletados\r\n    if(ordemUpdated){\r\n      setOrdemUpdated(false)\r\n      window.location.reload();\r\n    } \r\n  } \r\n  const handleShowOrdem = () => setShowOrdem(true);\r\n  \r\n return (\r\n  <div>\r\n    <Card\r\n      className=\"my-2\"\r\n      color=\"primary\"\r\n      inverse\r\n      style={{\r\n        width: \"100%\",\r\n        textAlign: \"left\",\r\n        padding: 0,\r\n        margin: 0,\r\n        border: 0\r\n      }}\r\n  >\r\n    {console.log(item, \"----\", colorBody, \"---\", colorHead)}\r\n      <CardHeader style={{ fontSize: \"1.4vw\", backgroundColor: colorHead }}>\r\n        <div style={{display:\"flex\"}}>\r\n          <div style={{flex:\"90%\"}}>Placa: {item.placa}</div> \r\n          <span onClick={handleShowOrdem} style={{flex:\"10%\"}}>\r\n               <OverlayTrigger\r\n                      key={\"new\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"new\"}`}>\r\n                            <strong>{\"Detalhes da ordem\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon={faFilePen} />\r\n                    </OverlayTrigger>\r\n          </span>\r\n        </div>\r\n      </CardHeader>\r\n      <CardBody style={{ backgroundColor: colorBody}}>\r\n        <Collapse isOpen={collapse}>\r\n          <CardText style={{ fontSize: \"1.2vw\" }}>\r\n            <table className=\"tabelaCard\" >\r\n            <tr><td>Cliente:</td><td>{item.veiculo.cliente.pessoa.nome}</td></tr>\r\n              <tr><td>Modelo:</td><td>{item.veiculo.marca+\" - \"+item.veiculo.modelo}</td></tr>\r\n              <tr><td>Valor em peças:</td> <td><CurrencyInput \r\n            style={{border:\"0px\", backgroundColor:\"rgba(0, 0, 0, 0)\", textAlign:\"right\"}}\r\n            value={item.valorTotalPecas} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            disabled\r\n            /></td></tr>   \r\n            <tr><td>Valor em mão de obra:</td> <td ><CurrencyInput \r\n              style={{border:\"0px\", backgroundColor:\"rgba(0, 0, 0, 0)\", textAlign:\"right\"}}\r\n            value={item.valorTotalServicos} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            disabled\r\n            /></td></tr>    \r\n            <tr><td>Total:</td> <td ><CurrencyInput \r\n            style={{border:\"0px\", backgroundColor:\"rgba(0, 0, 0, 0)\", textAlign:\"right\"}}\r\n            value={item.valorTotalPecas + item.valorTotalServicos} \r\n            decimalSeparator=\",\" \r\n            thousandSeparator=\".\"\r\n            prefix=\"R$\"\r\n            disabled\r\n            /></td></tr>     \r\n            </table>\r\n          </CardText>\r\n        </Collapse>\r\n\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{\r\n              marginBottom: \"0.1vw\",\r\n              width: \"50%\",\r\n              fontSize: \"1.2vw\",\r\n              backgroundColor: \"rgba(223, 236, 243, 0.01)\",\r\n              border: 0,\r\n              marginTop: \"0.2vw\"\r\n            }}\r\n          >\r\n            {collapse ? <BiChevronUp /> : <BiChevronDown />}\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n\r\n    <Modal show={showOrdem} onHide={handleCloseOrdem}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Cadastrar uma ordem</Modal.Title>    \r\n        </Modal.Header>\r\n        <Modal.Body> <CadastroDeOrdemCalendario ordemAberta={item} changeCrud={props.changeCrud} setUpdated={setOrdemUpdated}/></Modal.Body>\r\n        <Modal.Footer>\r\n         <Button variant=\"danger\" onClick={handleCloseOrdem} style={{position:\"absolute\", left:\"0px\", bottom:\"1px\"}}>\r\n            Voltar\r\n          </Button>\r\n<div></div><br/>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { DragAndDrop, Drag, Drop } from \"./drag-and-drop\";\r\nimport { reorder } from \"./helpers.js\";\r\nimport { Cartao } from \"./cartao\";\r\nimport moment from \"moment-timezone\";\r\nimport OrdemService from \"./Services/OrdemService\";\r\n//import Ordens from \"./components/Ordens\";\r\nimport ServicoService from \"./Services/ServicoService\";\r\nexport const ListComponent = (props) => { //props é Ordens.js\r\n  \r\nlet mesAtual = moment.tz(props.dataAtual,\"America/Sao_Paulo\").format(\"MM\");\r\nlet anoAtual = moment.tz(props.dataAtual,\"America/Sao_Paulo\").format(\"yyy\");\r\nlet mes = moment.tz(props.dataAtual,\"America/Sao_Paulo\").format(\"MMM\")\r\nlet diasMax = moment.tz(props.dataAtual,\"America/Sao_Paulo\").daysInMonth()\r\nconsole.log(diasMax)\r\n//  console.log(mes)\r\nlet [currentOrdensList, setCurrentOrdensList] = useState([])\r\n\r\nlet diaAtual = moment.tz(props.dataAtual,\"America/Sao_Paulo\").format(\"d\"); //n-ésimo dia da semana : n in (1-7) \r\nlet segundaAtual = moment.tz(props.dataAtual,\"America/Sao_Paulo\").format(\"DD\") - diaAtual + 1; //segunda feira da semana(nº dia do mes : 1-30)\r\n//dias do calendario de acordo com a segunda-feira\r\n\r\nlet dias = [segundaAtual, segundaAtual+1, segundaAtual+2, segundaAtual+3, segundaAtual+4]\r\nconsole.log(dias)\r\n\r\n  let [categories, setCategories] = useState([\r\n    {\r\n      id: anoAtual+\"-\"+mesAtual+\"-\"+dias[0],\r\n      name: \"seg.\",\r\n      key: \"segunda\",\r\n      info: dias[0],\r\n      items: []\r\n    },\r\n    {\r\n      id: anoAtual+\"-\"+mesAtual+\"-\"+dias[1],\r\n      name: \"ter.\",\r\n      key: \"terca\",\r\n      info: dias[1],\r\n      items: []\r\n    },\r\n    {\r\n      id: anoAtual+\"-\"+mesAtual+\"-\"+dias[2],\r\n      name: \"qua.\",\r\n      key: \"quarta\",\r\n      info: dias[2],\r\n      items: []\r\n    },\r\n    {\r\n      id: anoAtual+\"-\"+mesAtual+\"-\"+dias[3],\r\n      name: \"qui.\",\r\n      key: \"quinta\",\r\n      info: dias[3],\r\n      items: []\r\n    },\r\n    {\r\n      id: anoAtual+\"-\"+mesAtual+\"-\"+dias[4],\r\n      name: \"sex.\",\r\n      key: \"sexta\",\r\n      info: dias[4],\r\n      items: []\r\n    }\r\n  ]);\r\n\r\n  const updateCategories = () =>{\r\n    \r\n  }\r\n\r\n const [crud, setCrud] = useState(false) \r\n//carrega todas as ordens do corrente mes \r\nuseEffect(() => {\r\n //console.log(categories)\r\nretrieveOrdens()\r\n}, [props, crud]); \r\n\r\n//funcao executada pelo componente AddOrdemCalendario a fim de atualizar o calendario\r\nconst changeCrud = () =>{\r\n  setCrud(!crud)\r\n  //setCrud(!crud)\r\n}\r\n\r\n//adiciona ordens à current ordens lista\r\n  const retrieveOrdens = () =>{\r\n    console.log(\"retrieving ordens\")\r\n    OrdemService.findByAnoMes(anoAtual, mesAtual)\r\n    .then(\r\n      response => {\r\n        setCurrentOrdensList(response.data)\r\n       console.log(\"lista de ordens\", response.data)\r\n       return response.data\r\n      }\r\n    )\r\n    .then(lista =>{ //pega a lista de ordens\r\n     // console.log(\"lista de ordens: \",lista)\r\n      lista.map((ord) =>{ //p cada ordem\r\n        ServicoService.getValores(ord.id) //pega seus valores\r\n        .then(response2 =>{ \r\n          ord.valorTotalPecas=response2.data.valorTPecas //seta valores\r\n          ord.valorTotalServicos = response2.data.valorTServicos  \r\n        })  \r\n      })\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  //função mapeia cada ordem da lista buscada na Api à sua categoria\r\n  const mapeiaOrdensCategorias = () =>{ \r\n    currentOrdensList.forEach(ord =>{ //para cada ordem do mes  \r\n    //executa setcateg\r\n      setCategories(currentCategories => //current = lista pega da api \r\n          //para cada categoria, atualiza se necessario.\r\n          currentCategories.map((categ,index) => { //para cada categoria(dia semana)\r\n            categ.id = anoAtual+\"-\"+mesAtual+\"-\"+(dias[index]>9?dias[index]:(\"0\"+dias[index])) //atualiza id das categorias ajusta dia, ex: 5 para 05\r\n            categ.info = (dias[index]) //recebe dia\r\n            //console.log(categ)\r\n            if (categ.id === ord.dataAbertura) { //se a data da categoria for a mesma da ordem\r\n              categ.items.indexOf(ord)==-1? categ.items.push(ord) : //adiciona ordem à categoria correspondente, se ela ainda nao estiver la\r\n              console.log()\r\n              return categ; //retorna categ com ordem adiconada\r\n            }\r\n            //se nao bater as datas retorna categ old deixando a categoria como esta\r\n            return categ; \r\n          }),      \r\n      );\r\n    });    \r\n      //console.log(\"lista de categorias atual:  \", categories)\r\n  }\r\n  //após carregar a lista de ordens, faz o mapeamento, inserindo-as no drop\r\n  useMemo(()=>{\r\n    //antes de mapear a lista às categorias, esvazia os itens nas categorias\r\n    setCategories(currentCategories => \r\n          currentCategories.map((categ) => { \r\n            categ.items = []\r\n            return categ; \r\n          }),      \r\n      );\r\n    mapeiaOrdensCategorias()  \r\n    //console.log(\"lista atual(ordens do mes):\", currentOrdensList) \r\n  },[currentOrdensList, props])\r\n  \r\n  const [updatableOrdem, setUpdatableOrdem] = useState()\r\n\r\n  const updateOrdemAfterDrop = () =>{\r\n    //faz o Put\r\n    OrdemService.update(updatableOrdem.id, updatableOrdem) \r\n    .then(response => {\r\n      setUpdatableOrdem();\r\n  //console.log(response)\r\n  })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n\r\nuseEffect(() => {\r\n if(updatableOrdem) \r\n  updateOrdemAfterDrop()\r\n  }, [updatableOrdem? updatableOrdem:0]); \r\n  //ao soltar um draggable\r\n  const handleDragEnd = (result) => {\r\n    //recebe informacoes (source dropable, destination dropable e dropable type) \r\n    const { type, source, destination } = result;\r\n    //console.log(type);\r\n    if (!destination) return;\r\n\r\n    //recebe id da origem e destino\r\n    const sourceCategoryId = source.droppableId;\r\n    const destinationCategoryId = destination.droppableId;\r\n\r\n    //verifica se o tipo do drop é dropable\r\n    if (type === \"droppable-for-item\") {\r\n      //console.log(\"dropable\");\r\n      // Se o dropable de origem for o mesmo de destino\r\n      if (sourceCategoryId === destinationCategoryId) {\r\n        //função reordena a lista items na origem\r\n        const updatedOrder = reorder(\r\n          categories.find((category) => category.id === sourceCategoryId).items,\r\n          source.index,\r\n          destination.index\r\n        );\r\n        //função atualiza estado das categorias\r\n        const updatedCategories = categories.map((category) =>\r\n          category.id !== sourceCategoryId\r\n            ? category\r\n            : { ...category, items: updatedOrder }\r\n        ); //o atributo itens recebe a lista ordenada\r\n        //seta novo estado da lista de itens\r\n        setCategories(updatedCategories);\r\n        //se for um dropable diferente\r\n      } else {\r\n        // recebe as listas de itens da origem e destino\r\n        const sourceOrder = categories.find(\r\n          (category) => category.id === sourceCategoryId\r\n        ).items;\r\n        const destinationOrder = categories.find(\r\n          (category) => category.id === destinationCategoryId\r\n        ).items;\r\n\r\n        //remove item da origem\r\n        const [removed] = sourceOrder.splice(source.index, 1); //pega um item da lista, o item em source.index\r\n        setUpdatableOrdem({...removed, dataAbertura: destinationCategoryId}) //ordem que sera atualziada\r\n        removed.dataAbertura = destinationCategoryId; //atualiza id, a ordem antiga foi completamente removida\r\n        //insere no destino\r\n        destinationOrder.splice(destination.index, 0, removed);//insere na categoria destino com id novo\r\n        //atualiza na lista de ordens\r\n        //setCurrentOrdensList({})\r\n        destinationOrder[removed] = sourceOrder[removed];\r\n        delete sourceOrder[removed];\r\n\r\n        //atualiza lista de ordens, e o useMemo chama mapeamento. Como a ordem de id destination ja esta na categoria de destino, o mapeamento nao vai inserir a ordem no destino duplicada\r\n        setCurrentOrdensList(current =>\r\n          current.map(orde => {//outros itens com mesma dataAbertura nao foram removidos do source\r\n            if (orde.dataAbertura === sourceCategoryId && orde.id === removed.id) {\r\n              //atualiza apenas item dropado, que foi removido do dropsource, e sera inserido em dest\r\n              return {...orde, dataAbertura: destinationCategoryId}; //remove da lista curr a ordem antiga, e sobrescreve com id novo\r\n            }\r\n            return orde;\r\n          }),\r\n        );\r\n\r\n        //função que atualiza as categorias\r\n        const updatedCategories = categories.map((category) =>\r\n          //para cada categoria, se for origem, recebe a lista sem elemento removido\r\n          category.id === sourceCategoryId\r\n            ? { ...category, items: sourceOrder }\r\n            : //se for destino, recebe a lista de itens com novo elemento\r\n            category.id === destinationCategoryId\r\n            ? { ...category, items: destinationOrder }\r\n            : category\r\n        );\r\n        //executa funcao de update \r\n        //setCategories(updatedCategories);\r\n      }\r\n    }\r\n  }; \r\n\r\n  return (\r\n    //DragAndDrop executa OnDragEnd função\r\n    <DragAndDrop onDragEnd={handleDragEnd}>\r\n      {/**mapeia cada categoria do estado */}\r\n      {categories.map((category, categoryIndex) => {\r\n        if(category.info>0 && category.info<=diasMax)\r\n        return (\r\n          <div className=\"category-container\">\r\n            <h4 className=\"titulo\" align=\"center\">\r\n              {category.name + \"/\"+mes}\r\n            </h4>\r\n            {/**Cria um elemento dropable */}\r\n            <Drop key={category.id} id={category.id} type=\"droppable-for-item\">\r\n              {/**Mapeia cada item */}\r\n              {category.items.map((item, index) => {\r\n                return (\r\n                 <div>\r\n                  {/**Cria elementos draggables se ordem estiver aberta */}\r\n                  {item.aberto? //se estiver aberta cria draggable\r\n                      <Drag key={item.id} id={``+item.id} index={index}>\r\n                        <Cartao item={item} key={item.id} changeCrud = {changeCrud}/>\r\n                      </Drag>  \r\n                    : //senão, cria apenas cartao\r\n                       <Cartao item={item} key={item.id} changeCrud = {changeCrud}/>\r\n                  }\r\n                  </div>\r\n                );\r\n              })}\r\n            </Drop>\r\n          </div>   \r\n        );\r\n      })} \r\n    </DragAndDrop>\r\n  );\r\n};\r\n","export const reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n","import { ListComponent } from \"../ListComponent\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport 'moment/locale/pt';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CadastroDeOrdemCalendario from \"./CadastroDeOrdemCalendario\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nconst Ordens = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [showOrdem, setShowOrdem] = useState(false);\r\n    const handleCloseOrdem = () => setShowOrdem(false);\r\n    const handleShowOrdem = () => setShowOrdem(true);\r\n    \r\n    const mesesNomes = [ 'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\r\n    const diasNomes = ['Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta']\r\n    const [data, setData] = useState(new Date())\r\n\r\n    useEffect(()=>{},[data])\r\n\r\n    const selectData = (value) =>{\r\n        setData(value)\r\n    }\r\n\r\n      return(\r\n        <div style={{textAlign:\"center\"}}>\r\n            <div style={{display:\"flex\", justifyContent:\"center\", gap:\"35px\"}}>\r\n            <OverlayTrigger\r\n                      key={\"new\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"new\"}`}>\r\n                            <strong>{\"Selecione uma data\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <button onClick={handleShow} style={{marginTop:\"2rem\",\r\n                         backgroundColor:\"white\", border:\"0px\"}} className=\"botaoCalendario\">\r\n                            <h3 style={{flex:\"90%\"}}>{moment.tz(data,\"America/Sao_Paulo\").format(\"DD - MMMM - YYYY\")}</h3>\r\n                      </button>\r\n                    </OverlayTrigger>\r\n            \r\n            <span onClick={handleShowOrdem}>\r\n            <OverlayTrigger\r\n                      key={\"new\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"new\"}`}>\r\n                            <strong>{\"Nova ordem de serviço\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <div style={{marginTop:\"2.5em\"}}><FontAwesomeIcon icon={faCalendarPlus} /></div>\r\n                    </OverlayTrigger>\r\n                </span>\r\n            </div>\r\n            <hr/>\r\n    <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Selecione uma data</Modal.Title>    \r\n        </Modal.Header>\r\n        <Modal.Body> <Calendar \r\n        name=\"data\"\r\n        onClickDay={selectData}\r\n            defaultView='month'\r\n            tileDisabled={({ view, date }) => ((date.getDay() == 0|| date.getDay() == 6) //desativa sabados e domingos\r\n             && view=='month')}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal show={showOrdem} onHide={handleCloseOrdem}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Cadastrar uma ordem</Modal.Title>    \r\n        </Modal.Header>\r\n        <Modal.Body> <CadastroDeOrdemCalendario/></Modal.Body>\r\n        <Modal.Footer>\r\n         <Button variant=\"danger\" onClick={handleCloseOrdem} style={{position:\"absolute\", left:\"0px\", bottom:\"1px\"}}>\r\n            Voltar\r\n          </Button>\r\n<div></div><br/>\r\n        </Modal.Footer>\r\n      </Modal>\r\n           \r\n            </div>\r\n            <br/>\r\n        <div style = {{display: \"flex\", marginTop: 8}}>\r\n            <ListComponent dataAtual={data}/>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Ordens;","import { LineChart, Line } from 'recharts';\r\nimport React, { Component, PureComponent }  from 'react';\r\nimport moment from \"moment-timezone\";\r\nimport 'moment/locale/pt';\r\nimport { useState, useEffect, useRef  } from \"react\";\r\nimport ServicoService from \"../Services/ServicoService\";\r\nimport OrdemService from \"../Services/OrdemService\";\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer,Legend } from 'recharts';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Calendar from 'react-calendar';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n\r\nexport const Charts=() => {\r\n    const [dataPie, setDataPie] = useState([\r\n        {\r\n            name: \"Abertas\",\r\n            value: 0\r\n        },\r\n        {\r\n            name: \"Fechadas\",\r\n            value: 0\r\n        }\r\n    ]);  \r\n    const valorTotalMesPeca = useRef(0);\r\n    const valorTotalMesServico=  useRef(0);\r\n    const valorTotalMesPecaAberta = useRef(0);\r\n    const valorTotalMesServicoAberta =  useRef(0);\r\n    const abertas = useRef(0);    //contabiliza ordens em aberto\r\n    const qtdOrdens= useRef(0);  //contabiliza qtd de ordens\r\n\r\n   const dataAtual= useRef(new Date())\r\n    let mesAtual = moment.tz(dataAtual.current,\"America/Sao_Paulo\").format(\"MM\");\r\n    let anoAtual = moment.tz(dataAtual.current,\"America/Sao_Paulo\").format(\"yyy\");\r\n\r\n    //recarrega todas as ordens do corrente mes ao trocar a data\r\n   useEffect(() => {\r\n    abertas.current = 0;    //contabiliza ordens em aberto\r\n    qtdOrdens.current= 0;\r\n    console.log(\"current\")\r\n    mesAtual = moment.tz(dataAtual.current,\"America/Sao_Paulo\").format(\"MM\");\r\n    anoAtual = moment.tz(dataAtual.current,\"America/Sao_Paulo\").format(\"yyy\");\r\n    retrieveOrdens()\r\n}, [ dataAtual.current]); \r\n\r\n    let [currentOrdensList, setCurrentOrdensList] = useState([]) //lista de ordens\r\n    let [currentServList, setCurrentServList] = useState([]) //lista de servicos apenas pra rerender\r\n    //adiciona ordens à current ordens lista\r\n    const retrieveOrdens = () =>{\r\n        console.log(\"retrieving ordens\")\r\n        OrdemService.findByAnoMes(anoAtual, mesAtual) //retorna lista\r\n        .then(\r\n             response => {\r\n                 setCurrentOrdensList(response.data) //salva na variavel lista\r\n                console.log(\"lista de ordens\", response.data)\r\n        return response.data\r\n      }\r\n    )\r\n    .then(lista =>{ //apos pegar a resposta que é uma lista de ordens a lista de ordens\r\n      lista.map((ord) =>{ //p/ cada ordem\r\n        qtdOrdens.current = qtdOrdens.current + 1; //incrementa qtd de ordens\r\n        if(ord.aberto){abertas.current = abertas.current + 1;} //se estiver aberta, incrementa qtd de ordens abertas\r\n        valorTotalMesPeca.current = 0;\r\n        valorTotalMesServico.current=  0;\r\n        valorTotalMesPecaAberta.current = 0;\r\n        valorTotalMesServicoAberta.current =  0;\r\n        //soma valores dos servicos da ordem    \r\n            ServicoService.getValores(ord.id) //pega seus valores de servicos pelo id da ordem\r\n                .then(response2 =>{ \r\n                ord.valorTotalPecas=response2.data.valorTPecas //seta valores na ordem\r\n                valorTotalMesPeca.current = valorTotalMesPeca.current + response2.data.valorTPecas; //incrementa valores mensais de ordens\r\n                //console.log(valorTotalMesPeca.current)\r\n                if(ord.aberto){valorTotalMesPecaAberta.current = valorTotalMesPecaAberta.current + response2.data.valorTPecas;} //incrementa valores mensais de ordens abertas\r\n\r\n                ord.valorTotalServicos = response2.data.valorTServicos  \r\n                valorTotalMesServico.current = valorTotalMesServico.current + response2.data.valorTServicos;\r\n                if(ord.aberto){valorTotalMesServicoAberta.current = valorTotalMesServicoAberta.current + response2.data.valorTServicos;}\r\n                setCurrentServList(response2) //setando aqui apenas para que rerender seja feito e os valores totais mensais sejam atualziados\r\n            })  \r\n      })\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n  //useEffect atualiza dados do grafico de pizza \r\n  useEffect(()=>{\r\n    //console.log(\"QTDS: \" , qtdOrdens.current, \"    abertas: \", abertas.current) \r\n    setDataPie(\r\n       [ //seta os mesmos objetos\r\n            {\r\n                ...dataPie[0],//copia o objeto \"Abertas\"\r\n                value:abertas.current, //reseta o valor\r\n            },\r\n            {\r\n                ...dataPie[1], //copia o objeto \"Fechadas\"\r\n                value: (qtdOrdens.current-abertas.current), //reseta o valor\r\n            }\r\n        ]\r\n    );\r\n  }\r\n    ,[abertas.current,qtdOrdens.current])\r\n    \r\n  //detalhes grafico pizza\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];  \r\n  const RADIAN = Math.PI / 180;\r\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n    return (\r\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\n\r\n  //Renderiza novamente quando valores da tabela forem atualziados\r\n  useEffect( () =>{\r\n   // console.log(\"VTOTAL: \" , valorTotalMesPeca.current) \r\n    },[valorTotalMesServico.current, valorTotalMesPecaAberta.current, valorTotalMesPeca.current, valorTotalMesServicoAberta.current])\r\n\r\n\r\n    //constantes para modal de mês\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    //funcao seta data clicada no calendario\r\n    const selectData = (value) =>{\r\n        dataAtual.current=value\r\n    }\r\n\r\n\r\n    //constantes da dropdown de colabboradores\r\n    //dropdown de funcionarios\r\n    const initialFunc = {codFuncionario: null}\r\n    const [funcionarios, setFuncionarios] = useState([])\r\n    const [currentFuncionario, setCurrentFuncionario] = useState(initialFunc)\r\n    const [dropDown, setDropDown] = useState(false)\r\n    const fvalorTotalMesPeca = useRef(0);\r\n    const fvalorTotalMesServico=  useRef(0);\r\n    const fvalorTotalMesPecaAberta = useRef(0);\r\n    const fvalorTotalMesServicoAberta =  useRef(0);\r\n    const fabertas = useRef(0);    //contabiliza ordens em aberto\r\n    const fqtdOrdens= useRef(0);  //contabiliza qtd de ordens\r\n    let [fcurrentOrdensList, setFcurrentOrdensList] = useState([]) //lista de ordens de um funcionario\r\n    //abre/fecha dropdown\r\n    const toggleDrop = () =>{\r\n        setDropDown(!dropDown)\r\n    }\r\n    //caso o mesmo funcionario seja slecionado\r\n    const faznada = () =>{}\r\n    //Atualiza lista de colaboradores mensais \r\n    useEffect(()=>{\r\n        //funcionarios das ordens menais sao adicinados á lista funcionarios para imprimir no dorpdwon\r\n        currentOrdensList.forEach(ord=> //para cada ordem da lista mensal\r\n            {\r\n                console.log(\"Ordem na lista: \",ord)\r\n                //verifica se algum funcionario retorna verdadeiro quando tem seu codigo comparado com o funcinario da ordem        se sim, nao faz nada      senao, adiciona o func da ordem na lista\r\n                funcionarios.some(funcionario => funcionario.cod_funcionario == ord.funcionario.cod_funcionario)? faznada(): funcionarios.push(ord.funcionario)\r\n            })      \r\n      }\r\n        ,[currentOrdensList])\r\n    //Pega lista de ordens do funcionario ao selecionar funcionario\r\n    useEffect(()=>{\r\n        fabertas.current = 0;    //zera a qtd ordens do funcionario abertas\r\n        fqtdOrdens.current= 0;\r\n        fvalorTotalMesPeca.current = 0;\r\n        fvalorTotalMesServico.current=  0;\r\n        fvalorTotalMesPecaAberta.current = 0;\r\n        fvalorTotalMesServicoAberta.current =  0;\r\n        retrieveOrdensFunc()\r\n        }\r\n        ,[currentFuncionario,currentOrdensList]) \r\n    //Pega lista de ordens mensais do funcionario selecionado e computa valores\r\n    const retrieveOrdensFunc = () =>{\r\n        currentOrdensList.forEach(ord=> //para cada ordem da lista mensal\r\n            {\r\n                //se o func selecionado tem o mesmo codFuncionario da ordem\r\n                if(currentFuncionario.cod_funcionario == ord.codFuncionario){\r\n                    fqtdOrdens.current = fqtdOrdens.current + 1; //incrementa qtd de ordens\r\n                    if(ord.aberto){//se estiver aberta, incrementa qtd de ordens abertas e valores de ordens abertas\r\n                        fabertas.current = fabertas.current + 1;\r\n                        fvalorTotalMesPecaAberta.current = fvalorTotalMesPecaAberta.current + ord.valorTotalPecas;\r\n                        fvalorTotalMesServicoAberta.current =  fvalorTotalMesServicoAberta.current + ord.valorTotalServicos;\r\n                        } \r\n                    //incrementa valores totais\r\n                    fvalorTotalMesPeca.current = fvalorTotalMesPeca.current + ord.valorTotalPecas;\r\n                    fvalorTotalMesServico.current=  fvalorTotalMesServico.current+ord.valorTotalServicos;\r\n                }\r\n            })  \r\n            setFcurrentOrdensList([]) //apenas um set, depois de ter executado todos os calculos\r\n    }\r\n    //Render\r\n    return (\r\n        <div>\r\n            <div style={{width:\"100%\", textAlign:\"center\", marginTop:\"10px\"}}>\r\n                {/**texto que imprime data atual com tooltip e abre modal de calendario*/}\r\n                <OverlayTrigger\r\n                      key={\"new\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"new\"}`}>\r\n                            <strong>{\"Selecione uma data\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <button onClick={handleShow} style={{marginTop:\"2rem\", //mostra o modal de calendario\r\n                         backgroundColor:\"white\", border:\"0px\"}} className=\"botaoCalendario\">\r\n                            <h3 style={{flex:\"90%\"}}>{moment.tz(dataAtual.current,\"America/Sao_Paulo\").format(\"DD - MMMM - YYYY\")}</h3> \r\n                      </button>\r\n                    </OverlayTrigger>\r\n            </div>\r\n        <div style={{width:\"100%\", height:\"300px\", textAlign:\"center\", paddingTop:\"50px\"}}> \r\n        <p>Ordens Abertas/Fechadas</p>  \r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart width=\"100%\" height=\"100%\">\r\n          <Pie\r\n            data={dataPie}\r\n            cx=\"50%\"\r\n            cy=\"40%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {dataPie.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n          <Legend />\r\n        </PieChart>\r\n        </ResponsiveContainer>\r\n        </div> \r\n        <div style={{marginTop:\"90px\"}}>  \r\n        <table className=\"table\" style={{textAlign:\"center\"}}>\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Quantidade</th>\r\n                <th scope=\"col\">$ Peças</th>\r\n                <th scope=\"col\">$ Mão de obra</th>\r\n                <th scope=\"col\">$ Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                <td>Abertas</td>\r\n                <td>{abertas.current}</td>\r\n                <td>{valorTotalMesPecaAberta.current}</td>\r\n                <td>{valorTotalMesServicoAberta.current}</td>\r\n                <td>{valorTotalMesPecaAberta.current+valorTotalMesServicoAberta.current}</td>\r\n                </tr>\r\n                <tr>\r\n                <td>Fechadas</td> \r\n                <td>{qtdOrdens.current-abertas.current}</td>\r\n                <td>{valorTotalMesPeca.current-valorTotalMesPecaAberta.current}</td>\r\n                <td>{valorTotalMesServico.current-valorTotalMesServicoAberta.current}</td>\r\n                <td>{valorTotalMesPeca.current+valorTotalMesServico.current -valorTotalMesPecaAberta.current-valorTotalMesServicoAberta.current}</td>\r\n                </tr>\r\n                <tr>\r\n                <td>Total</td>\r\n                <td>{qtdOrdens.current}</td>\r\n                <td>{valorTotalMesPeca.current}</td>\r\n                <td>{valorTotalMesServico.current}</td>\r\n                <td>{valorTotalMesPeca.current+valorTotalMesServico.current}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>  \r\n\r\n        \r\n        {/**modal para selecao de mês */}\r\n        <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Selecione uma data</Modal.Title>    \r\n        </Modal.Header>\r\n        <Modal.Body> <Calendar \r\n        name=\"data\"\r\n        onClickDay={selectData} //modifica dataAtual\r\n            defaultView='month'\r\n            tileDisabled={({ view, date }) => ((date.getDay() == 0|| date.getDay() == 6) //desativa sabados e domingos\r\n             && view=='month')}/></Modal.Body>\r\n      </Modal>\r\n\r\n      <div style={{marginTop:\"90px\", marginLeft:\"80px\"}}>\r\n        <label>Selecione um colaborador:</label>\r\n        <Dropdown isOpen={dropDown} toggle={toggleDrop}>\r\n            <Dropdown.Toggle caret>\r\n            {(currentFuncionario.pessoa)? currentFuncionario.pessoa.nome: \"Selecione colaborador\"}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu container=\"body\">\r\n                {funcionarios &&\r\n                funcionarios.map((func, index) => (\r\n                <Dropdown.Item\r\n                    onClick={func!=currentFuncionario?() => setCurrentFuncionario(func): ()=>faznada}\r\n                    key={index}\r\n                    name=\"codFuncionario\"\r\n                >\r\n                    {func.pessoa.nome}\r\n                </Dropdown.Item>\r\n                ))}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    </div>\r\n    {currentFuncionario.cod_funcionario!=null? <div>\r\n        <table className=\"table\" style={{textAlign:\"center\"}}>\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Quantidade</th>\r\n                <th scope=\"col\">$ Peças</th>\r\n                <th scope=\"col\">$ Mão de obra</th>\r\n                <th scope=\"col\">$ Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                <td>Abertas</td>\r\n                <td>{fabertas.current}</td>\r\n                <td>{fvalorTotalMesPecaAberta.current}</td>\r\n                <td>{fvalorTotalMesServicoAberta.current}</td>\r\n                <td>{fvalorTotalMesPecaAberta.current+fvalorTotalMesServicoAberta.current}</td>\r\n                </tr>\r\n                <tr>\r\n                <td>Fechadas</td> \r\n                <td>{fqtdOrdens.current-fabertas.current}</td>\r\n                <td>{fvalorTotalMesPeca.current-fvalorTotalMesPecaAberta.current}</td>\r\n                <td>{fvalorTotalMesServico.current-fvalorTotalMesServicoAberta.current}</td>\r\n                <td>{fvalorTotalMesPeca.current+fvalorTotalMesServico.current -fvalorTotalMesPecaAberta.current-fvalorTotalMesServicoAberta.current}</td>\r\n                </tr>\r\n                <tr>\r\n                <td>Total</td>\r\n                <td>{fqtdOrdens.current}</td>\r\n                <td>{fvalorTotalMesPeca.current}</td>\r\n                <td>{fvalorTotalMesServico.current}</td>\r\n                <td>{fvalorTotalMesPeca.current+fvalorTotalMesServico.current}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>: \"\"}\r\n  </div>\r\n);};\r\nexport default Charts ","import React, { useState, useEffect } from \"react\";\r\nimport Addpessoa  from \"./AddPessoa\";\r\nimport {Navigate, useParams, Link, useNavigate} from \"react-router-dom\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport FuncionarioService from \"../Services/FuncionarioService\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport ToastContainer from 'react-bootstrap/ToastContainer';\r\n\r\nconst AddFuncionario = () => {\r\n  const navigate = useNavigate()\r\n    //JSON CLIENTE\r\n  const initialFuncionarioState = {\r\n    cod_funcionario: null,\r\n    pessoa: null\r\n    }\r\n//func começa sendo nulo\r\n  const [funcionario, setFuncionario] = useState(initialFuncionarioState);\r\n\r\n//path variable\r\nconst { id }= useParams();\r\n //se houver path variable\r\n  useEffect(() => {\r\n    if (id)\r\n      getFuncionario(id);\r\n  }, [id]);\r\n//Le func passada como pathVariable\r\nconst getFuncionario = id => {\r\n    FuncionarioService.get(id)\r\n      .then(response => {\r\n        setFuncionario(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //a form comeca falsa, nao enviada\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  //quando um func for salvo, o filho muda a variavel submitted e renderiza a mensagem de salvo\r\n  const changeSubmitted = () =>{\r\n    setSubmitted(true) \r\n    setProgressCounter(100)\r\n  };\r\n\r\n  //Conta 4s sempre que mudar a variavle submitted e em seguida retorna para seu valor original \r\n  useEffect(() => {\r\n    const timeId = setTimeout(\r\n      () => setSubmitted(false), //\"de\"renderiza a mensagem\r\n      5000\r\n    );\r\n    return () => {\r\n      clearTimeout(timeId)\r\n      //navigate(`/clientes/edit/${cliente.cod_cliente}`, {replace:true})\r\n    }\r\n  }, [submitted]);\r\n\r\n  //Barra de progresso de 5s(de 20 em 20 fica ruim... e 5s e mto tempo)\r\n  const [progressCounter, setProgressCounter] = useState(0); //barra vai de 0 a 100\r\n  React.useEffect(() => { //executa se o valor da barra for maior que 0\r\n    const timer = progressCounter > 0 && setTimeout( //executa a timeOut do react\r\n      () => setProgressCounter(progressCounter - 1), 40 //a cada segundo, decrementa 20 unidades da barra(em 5s progress=0)\r\n      ); //para 4s é preciso 25 decrementos p s, ou seja, executar 25 vezes em 1s\r\n      return () => clearInterval(timer);\r\n  }, [progressCounter]); //executa quando mudar o valor da barra\r\n\r\n\r\n  return (\r\n    <div className=\"submit-form\" style={{paddingLeft:\"50px\", paddingTop:\"30px\",width:\"95%\"}}>\r\n        <div>\r\n            <Addpessoa funcionario = {funcionario} changePaiSubmit ={changeSubmitted}/>\r\n        </div>\r\n        <ToastContainer className=\"p-3\" position={\"bottom-center\"}>\r\n          <Toast show={submitted}>\r\n            <Toast.Header closeButton={false}>\r\n              <strong className=\"me-auto\">Colaborador salvo</strong>\r\n            </Toast.Header>\r\n            <Toast.Body><ProgressBar animated now={progressCounter} /></Toast.Body>\r\n          </Toast>\r\n        </ToastContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddFuncionario;","import React, { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport ClienteService from \"../Services/ClienteService\";\r\nimport { Link, Route,useNavigate } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useTable } from \"react-table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faPenToSquare, faTrashCan, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport FuncionarioService from  \"../Services/FuncionarioService\";\r\n\r\nlibrary.add(faPenToSquare, faTrashCan, faPlus);\r\n\r\nconst FuncionariosList = (props) => {\r\n    const navigate = useNavigate();\r\n  const [funcionarios, setFuncionarios] = useState([]);\r\n  /*const [currentCLiente, setCurrentCliente] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);*/\r\n  const [searchNome, setSearchNome] = useState(\"\");\r\n  const funcionariosRef = useRef(); //persiste entre renders ao mudar paginacao, caixa de etxto ou qqr\r\n  funcionariosRef.current = funcionarios; //lista inicial de clientes é mantida\r\n  const [page, setPage] = useState(1); //inicia na pagina 1\r\n  const [count, setCount] = useState(0); \r\n  const [pageSize, setPageSize] = useState(3); //3 itens por pag\r\n  const pageSizes = [3, 6, 9]; //itens por pagina opcoes\r\n  const getRequestParams = (searchNome, page, pageSize) => { //parametros para Api\r\n    let params = {};\r\n\r\n    if (searchNome) { //se houver SearchNome, se torna parametro\r\n      params[\"nome\"] = searchNome;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    retrieveFuncionarios();\r\n  }, [page, pageSize]); //quando muda a pagina ou pageSize, reexecuta retrieveClientes\r\n\r\n  const telaCadastro = ()=>{\r\n    navigate(\"/funcionario/add\")\r\n  }\r\n\r\n  const retrieveFuncionarios = () => {\r\n    const params = getRequestParams(searchNome, page, pageSize); //pega parametros\r\n\r\n    FuncionarioService.getAll(params)\r\n      .then(response => {\r\n        const { funcionarios, totalPages } = response.data\r\n        setFuncionarios(funcionarios);\r\n        setCount(totalPages);\r\n        if(response.status ==204)\r\n            setFuncionarios([])\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const handlePageChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  const handlePageSizeChange = (event) => {\r\n    setPageSize(event.target.value);\r\n    setPage(1);\r\n  };\r\n  //sera executado quando o nome SearchNome for preenchido\r\n  const findByNome= () => {\r\n    setPage(1);\r\n    retrieveFuncionarios(); //O nome se torna um parametro\r\n  };\r\n  const refreshList = () => {\r\n    retrieveFuncionarios();\r\n    //setCurrentCliente(null);\r\n   // setCurrentIndex(-1);\r\n  };\r\n\r\n  /*const setActiveCliente = (cliente, index) => {\r\n    setCurrentCliente(cliente);\r\n    setCurrentIndex(index);\r\n  };*/\r\n\r\n\r\n  const onChangeSearchNome = (e) => {\r\n    const searchNome = e.target.value;\r\n    setSearchNome(searchNome);\r\n  };\r\n  const deleteFuncionario = (id) => {\r\n    const codfun = funcionariosRef.current[id].cod_funcionario;\r\n    FuncionarioService.remove(codfun)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const openFuncionario = (rowIndex) => {\r\n    const id = funcionariosRef.current[rowIndex].cod_funcionario;\r\n    navigate(\"/funcionarios/edit/\" + id);\r\n  };\r\n\r\n  //DEFINICAO TABELA\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Nome\",\r\n        accessor: \"pessoa.nome\",\r\n      },\r\n      {\r\n        Header: \"Telefone\",\r\n        accessor: \"pessoa.telefone\",\r\n      },\r\n      {\r\n        Header: \"Cidade\",\r\n        accessor: \"pessoa.cidade.name\",\r\n      },\r\n      {\r\n        Header: \" \",\r\n        accessor: \"actions\",\r\n        Cell: (props) => {\r\n          const rowIdx = props.row.id; //recebe o props de um elemento -> recebe o indice da linha\r\n          return (\r\n            <div className=\"row\" align=\"center\">\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => openFuncionario(rowIdx)}> {/**rowIdx é o indice do cliente na lista clientes */}\r\n              <OverlayTrigger\r\n                      key={\"ed\"}\r\n                      delay={{hide: 5 }}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"ed\"}`}>\r\n                            <strong>{\"editar funcionario\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-pen-to-square\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm\">\r\n              <span onClick={() => deleteFuncionario(rowIdx)}>\r\n                  <OverlayTrigger\r\n                  delay={{hide: 5 }}\r\n                      key={\"del\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"del\"}`}>\r\n                            <strong>{\"deletar funcionario\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-trash-can\" />\r\n                    </OverlayTrigger>\r\n              \r\n              </span>\r\n              </div>  \r\n              <div className=\"col-sm\">\r\n              <span onClick={() => navigate(\"/funcionario/add\")}>\r\n              <OverlayTrigger\r\n              delay={{hide: 5 }}\r\n                      key={\"cri\"}\r\n                      placement={\"top\"}\r\n                       overlay={\r\n                          <Tooltip id={`tooltip-${\"cri\"}`}>\r\n                            <strong>{\"novo funcionario\"}</strong>.\r\n                          </Tooltip>\r\n                        }>  \r\n                      <FontAwesomeIcon icon=\"fa-solid fa-plus\" />\r\n                    </OverlayTrigger>\r\n              </span>\r\n              </div> \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  //Varias funcoes que recebem dados da tabela\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ //tabela usada\r\n    columns, //colunas definidas acima\r\n    data: funcionarios, //dados com acessor\r\n  });\r\n\r\n  return (\r\n    <div className=\"list row\" style={{paddingLeft:\"50px\", paddingTop:\"30px\",width:\"95%\"}}>\r\n      <h3 align=\"center\">Colaboradores</h3><br/><br/><br/>\r\n      <hr/>\r\n      <h4>Procurar Colaborador</h4>\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Nome do colaborador\"\r\n            value={searchNome}\r\n            onChange={onChangeSearchNome}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByNome}\r\n            >\r\n              Buscar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-12 list\">\r\n        {/**Itens p/ pg */}\r\n      {\"Itens por página: \"} {/**handlePageSize atualiza pageSize que dispara nova busca na api pelo useEffect */}\r\n          <select onChange={handlePageSizeChange} value={pageSize}> \r\n            {pageSizes.map((size) => ( //opcao dos tamanhos que podem ser escolhidos\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {/**Paginacao -> indice das paginas*/}\r\n          <div style={{display:\"flex\"}}>\r\n          <div style={{flex:\"80%\"}}>\r\n          <Pagination\r\n            className=\"my-3\"\r\n            count={count} //contem a qtd total de paginas(paginas selecionaveis)\r\n            page={page} //ao mudar este valor, o indice(pagina selecionada) muda\r\n            siblingCount={1}\r\n            boundaryCount={1}\r\n            variant=\"outlined\"\r\n            shape=\"rounded\"\r\n            onChange={handlePageChange} //altera a pagina(indice) e dispara nova busca na api\r\n          /></div>\r\n          <div style={{flex:\"20%\"}}>\r\n          <button onClick={telaCadastro} className=\"btn btn-primary\" style={{height:\"auto\"}}>Cadastrar colaborador</button>\r\n          </div>\r\n          </div>\r\n        <table\r\n          className=\"table table-striped table-bordered\"\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => ( //mapeia as colunas/headers extraidas\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}> {/**pega props do corpo gerado */}\r\n            {rows.map((row, i) => { //cada row recebe indice(a lista clientes tem indices)\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FuncionariosList;","//import { ListComponent } from \"./ListComponent\";\r\nimport \"./styles.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\n//import { Cartao } from \"./cartao\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AddCliente from \"./components/AddCliente\";\r\n//import Cliente from \"./components/Cliente\";\r\nimport ClienteList from \"./components/ClienteList\";\r\nimport LocaisList from \"./components/LocaisList\";\r\nimport Ordens from \"./components/Ordens\";\r\n//import VeiculosList from \"./components/VeiculosList\";\r\nimport Charts from \"./components/Charts\";\r\nimport AddVeiculo from \"./components/AddVeiculo\";\r\nimport AddFuncionario from \"./components/AddFuncionario\";\r\nimport FuncionariosList from \"./components/FuncionariosList\";\r\nimport \"./index.css\"\r\n\r\nexport default function App() {\r\n  return (\r\n    /*<div className=\"containerTest\">\r\n      <ListComponent />\r\n    </div>*/\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\" style={{\"--bs-navbar-padding-x\": \"0.5rem\", width:\"100%\"}}>\r\n        <a href=\"/calendario\" className=\"navbar-brand\">\r\n          GeSMA\r\n        </a>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/calendario\"} className=\"nav-link\">\r\n              Ordens de Serviço\r\n            </Link>\r\n          </li>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/clientes\"} className=\"nav-link\">\r\n              Clientes\r\n            </Link>\r\n          </li>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/funcionarios\"} className=\"nav-link\">\r\n              Colaboradores\r\n            </Link>\r\n          </li>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/charts\"} className=\"nav-link\">\r\n              Relatório mensal\r\n            </Link>\r\n          </li>\r\n        </div>\r\n        <div className=\"navbar-nav mr-auto\" style={{marginLeft:\"10px\"}}>\r\n          <li className=\"nav-item\">\r\n          <a href=\"https://carllosoutside.github.io/GesmaAjuda/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n           Ajuda\r\n           </a>\r\n          </li>\r\n        </div>\r\n      </nav>\r\n\r\n      <div style={{paddingRight: 0, marginLeft:0}}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<div>\r\n      <Ordens />\r\n    </div>} />\r\n          <Route path=\"/calendario\" element={<div>\r\n      <Ordens />\r\n    </div>} />\r\n          <Route path=\"/clientes\" element={<ClienteList/>} />\r\n          <Route path=\"/funcionarios\" element={<FuncionariosList/>} />\r\n          <Route path=\"/add\" element={<AddCliente/>} />\r\n          <Route path=\"/clientes/edit/:id\" element={<AddCliente/>} />\r\n          <Route path=\"/funcionario/add\" element={<AddFuncionario/>} />\r\n          <Route path=\"/funcionarios/edit/:id\" element={<AddFuncionario/>} />\r\n          <Route path=\"/locais\" element={<LocaisList/>} />  \r\n          <Route path=\"/clientes/edit/:id/addveiculo/:placa\" element={<AddVeiculo/>} />\r\n          <Route path=\"/charts\" element={<Charts/>} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter ,HashRouter} from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <HashRouter><App /></HashRouter>\r\n    \r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}